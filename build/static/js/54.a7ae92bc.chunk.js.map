{"version":3,"sources":["@jumbo/components/PageComponents/layouts/PageContainer.js","@jumbo/components/PageComponents/PageHeader.js","@jumbo/components/PageComponents/PageBreadcrumbs/index.js","@jumbo/components/PageComponents/layouts/CorematComponentDemo.js","@jumbo/components/PageComponents/layouts/MuiComponentDemo.js","@jumbo/components/PageComponents/layouts/ComponentsDemo.js","../node_modules/@material-ui/core/esm/internal/svg-icons/MoreHoriz.js","../node_modules/@material-ui/core/esm/Breadcrumbs/BreadcrumbCollapsed.js","../node_modules/@material-ui/core/esm/Breadcrumbs/Breadcrumbs.js","../node_modules/@material-ui/icons/Check.js","../node_modules/@material-ui/icons/FormatAlignLeft.js","../node_modules/@material-ui/icons/FormatAlignCenter.js","../node_modules/@material-ui/icons/FormatAlignRight.js","../node_modules/@material-ui/icons/FormatBold.js","../node_modules/@material-ui/icons/FormatItalic.js","../node_modules/@material-ui/icons/FormatUnderlined.js","../node_modules/@material-ui/icons/FormatAlignJustify.js","../node_modules/@material-ui/icons/FormatColorFill.js","../node_modules/@material-ui/icons/ViewList.js","../node_modules/@material-ui/icons/ViewModule.js","../node_modules/@material-ui/icons/ViewQuilt.js","../node_modules/@material-ui/icons/Laptop.js","../node_modules/@material-ui/icons/Tv.js","../node_modules/@material-ui/icons/PhoneAndroid.js","webpack:///./src/@fake-db/mui-components/toggle-buttons sync nonrecursive ./node_modules/raw-loader/dist/cjs.js \\.(txt|js|md|tsx)$?f699","@fake-db/mui-components/toggle-buttons/CustomizedDividers.txt","@fake-db/mui-components/toggle-buttons/StandaloneToggleButton.txt","@fake-db/mui-components/toggle-buttons/ToggleButtonNotEmpty.txt","@fake-db/mui-components/toggle-buttons/ToggleButtonSizes.txt","@fake-db/mui-components/toggle-buttons/ToggleButtonsExclusive.txt","@fake-db/mui-components/toggle-buttons/ToggleButtonsMultiple.txt","@fake-db/mui-components/toggle-buttons/VerticalToggleButtons.txt","../node_modules/@material-ui/lab/esm/ToggleButton/ToggleButton.js","../node_modules/@material-ui/lab/esm/ToggleButtonGroup/isValueSelected.js","../node_modules/@material-ui/lab/esm/ToggleButtonGroup/ToggleButtonGroup.js","routes/Components/MuiComponents/ToggleButtons/demo/ToggleButtonsExclusive.js","routes/Components/MuiComponents/ToggleButtons/demo/ToggleButtonsMultiple.js","routes/Components/MuiComponents/ToggleButtons/demo/ToggleButtonSizes.js","routes/Components/MuiComponents/ToggleButtons/demo/VerticalToggleButtons.js","routes/Components/MuiComponents/ToggleButtons/demo/ToggleButtonNotEmpty.js","routes/Components/MuiComponents/ToggleButtons/demo/StandaloneToggleButton.js","routes/Components/MuiComponents/ToggleButtons/demo/CustomizedDividers.js","routes/Components/MuiComponents/ToggleButtons/index.js"],"names":["useStyles","makeStyles","pageFull","width","PageContainer","heading","breadcrumbs","children","className","restProps","classes","in","direction","mountOnEnter","unmountOnExit","clsx","breadcrumbComponent","items","theme","pageHeaderRoot","display","flexDirection","breakpoints","up","alignItems","titleRoot","down","marginBottom","PageHeader","rest","Box","mb","xs","md","lg","Typography","component","variant","ml","sm","textSm","fontSize","linkBlock","color","PageBreadcrumbs","Breadcrumbs","aria-label","map","item","index","isActive","key","label","to","link","CorematComponentDemo","SourceCodeComponent","SettingsComponent","GridContainer","Grid","CmtCard","MuiComponentDemo","pageTitle","menus","ComponentsDemo","root","flexWrap","contentArea","paddingRight","typography","pxToRem","contentSidebar","height","position","top","overflowY","flexShrink","xsDown","menu","dense","button","href","primary","createSvgIcon","React","d","withStyles","marginLeft","spacing","marginRight","backgroundColor","palette","grey","borderRadius","cursor","boxShadow","shadows","emphasize","icon","name","props","other","_objectWithoutProperties","ButtonBase","_extends","focusRipple","MoreHorizIcon","ref","_props$component","Component","_props$expandText","expandText","_props$itemsAfterColl","itemsAfterCollapse","_props$itemsBeforeCol","itemsBeforeCollapse","_props$maxItems","maxItems","_props$separator","separator","_React$useState","expanded","setExpanded","allItems","toArray","filter","child","li","concat","ol","reduce","acc","current","length","push","insertSeparators","_toConsumableArray","slice","BreadcrumbCollapsed","onClick","event","focusable","currentTarget","parentNode","querySelector","focus","renderItemsBeforeAndAfter","padding","margin","listStyle","userSelect","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","_default","createElement","_react","Fragment","fillOpacity","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","resolve","module","ToggleButton","_props$disabled","disabled","_props$disableFocusRi","disableFocusRipple","onChange","selected","_props$size","size","capitalize","isDefaultPrevented","boxSizing","shape","border","alpha","action","active","borderLeft","textDecoration","text","justifyContent","sizeSmall","sizeLarge","isValueSelected","candidate","undefined","Array","isArray","indexOf","ToggleButtonGroup","_props$exclusive","exclusive","_props$orientation","orientation","handleChange","buttonValue","newValue","splice","handleExclusiveChange","role","vertical","grouped","groupedHorizontal","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","groupedVertical","marginTop","borderTop","ToggleButtonsExclusive","useState","alignment","setAlignment","newAlignment","ToggleButtonsMultiple","formats","setFormats","newFormats","ToggleButtonSizes","VerticalToggleButtons","view","setView","nextView","toggleContainer","ToggleButtonNotEmpty","StandaloneToggleButton","setSelected","paper","divider","StyledToggleButtonGroup","CustomizedDividers","Paper","elevation","Divider","flexItem","section","sectionHeading","requireRaw","demos","filename","ToggleButtons","CodeViewerCard","language"],"mappings":"0HAAA,uEAOMA,EAAYC,KAAW,iBAAO,CAClCC,SAAU,CACRC,MAAO,YAmBIC,IAfO,SAAC,GAA8D,IAA5DC,EAA2D,EAA3DA,QAASC,EAAkD,EAAlDA,YAAaC,EAAqC,EAArCA,SAAUC,EAA2B,EAA3BA,UAAWC,EAAgB,EAAhBA,UAC5DC,EAAUV,IAEhB,OACE,kBAAC,IAAD,CAAOW,IAAI,EAAMC,UAAU,KAAKC,cAAY,EAACC,eAAa,GACxD,kBAAC,IAAD,eAAKN,UAAWO,kBAAKL,EAAQR,SAAUM,IAAgBC,IACnDJ,GAAWC,IACX,kBAAC,IAAD,CAAYD,QAASA,EAASW,oBAAqBV,GAAe,kBAAC,IAAD,CAAiBW,MAAOX,MAE3FC,M,6RClBHP,EAAYC,aAAW,SAAAiB,GAAK,MAAK,CACrCC,eAAe,aACbC,QAAS,OACTC,cAAe,UACdH,EAAMI,YAAYC,GAAG,MAAQ,CAC5BC,WAAY,SACZH,cAAe,QAGnBI,UAAU,eACPP,EAAMI,YAAYI,KAAK,MAAQ,CAC9BC,aAAc,SAoBLC,EAfI,SAAC,GAAyD,IAAvDvB,EAAsD,EAAtDA,QAASW,EAA6C,EAA7CA,oBAAqBT,EAAwB,EAAxBA,SAAasB,EAAW,iBACpEnB,EAAUV,IAEhB,OACE,kBAAC8B,EAAA,EAAD,eAAKtB,UAAWO,kBAAKL,EAAQS,eAAgB,eAAgBY,GAAI,CAAEC,GAAI,EAAGC,GAAI,EAAGC,GAAI,IAASL,GAC5F,kBAACM,EAAA,EAAD,CAAYC,UAAU,MAAMC,QAAQ,KAAK7B,UAAWO,kBAAKL,EAAQe,UAAW,UACzEpB,GAEH,kBAACyB,EAAA,EAAD,CAAKQ,GAAI,CAAEC,GAAI,SAAWvB,GAEzBT,I,8BCxBDP,EAAYC,aAAW,iBAAO,CAClCuC,OAAQ,CACNC,SAAU,IAEZC,UAAW,CACTtB,QAAS,QACTuB,MAAO,eAwBIC,EApBS,SAAC,GAAwB,IAAtB3B,EAAqB,EAArBA,MACnBP,GADwC,iBAC9BV,KAEhB,OACE,kBAAC6C,EAAA,EAAD,CAAarC,UAAU,eAAesC,aAAW,wBAC9C7B,EAAM8B,KAAI,SAACC,EAAMC,GAAP,OACTD,EAAKE,SACH,kBAACf,EAAA,EAAD,CAAYgB,IAAKF,EAAOzC,UAAWE,EAAQ8B,OAAQG,MAAM,eACtDK,EAAKI,OAGR,kBAAC,IAAD,CAASD,IAAKF,EAAOzC,UAAWO,kBAAKL,EAAQ8B,OAAQ9B,EAAQgC,WAAYC,MAAM,UAAUU,GAAIL,EAAKM,MAAQ,KACvGN,EAAKI,Y,oCCJHG,EAjBc,SAAC,GAA0D,IAAxDC,EAAuD,EAAvDA,oBAAqBC,EAAkC,EAAlCA,kBAAmBlD,EAAe,EAAfA,SACtE,OACE,kBAACH,EAAA,EAAD,KACE,kBAACsD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAMX,MAAI,EAAChB,GAAI,GAAIC,GAAI,GACrB,kBAAC,EAAD,CAAY5B,QAAQ,YACpB,kBAACyB,EAAA,EAAD,CAAKC,GAAI,GAAIxB,GACb,kBAACqD,EAAA,EAAD,KAAUJ,IAEZ,kBAACG,EAAA,EAAD,CAAMX,MAAI,EAAChB,GAAI,GAAIC,GAAI,GACpBwB,M,UCFII,EAZU,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,UAAWC,EAAsB,EAAtBA,MAAOxD,EAAe,EAAfA,SACtCD,EAAc,CAClB,CAAE8C,MAAO,OAAQE,KAAM,KACvB,CAAEF,MAAO,yBAA0BE,KAAM,mBACzC,CAAEF,MAAOU,EAAWZ,UAAU,IAEhC,OACE,kBAACc,EAAA,EAAD,CAAgBF,UAAWA,EAAWxD,YAAaA,EAAayD,MAAOA,GACpExD,K,qICNDP,EAAYC,aAAW,SAAAiB,GAAK,YAAK,CACrC+C,KAAM,CACJ7C,QAAS,OACT8C,SAAU,QAEZC,aAAW,GACThE,MAAO,QADE,cAERe,EAAMI,YAAYC,GAAG,MAAQ,CAC5B6C,aAAclD,EAAMmD,WAAWC,QAAQ,IACvCnE,MAAM,eAAD,OAAiBe,EAAMmD,WAAWC,QAAQ,KAA1C,OAJE,cAMRpD,EAAMI,YAAYC,GAAG,MAAQ,CAC5B6C,aAAclD,EAAMmD,WAAWC,QAAQ,MAPhC,GAUXC,eAAgB,CACdpE,MAAOe,EAAMmD,WAAWC,QAAQ,KAChCE,OAAO,gBAAD,OAAkBtD,EAAMmD,WAAWC,QAAQ,KAA3C,KACNG,SAAU,SACVC,IAAK,GACLC,UAAW,OACXC,WAAY,OA6BDZ,IAzBQ,SAAC,GAAiD,IAA/CF,EAA8C,EAA9CA,UAAWC,EAAmC,EAAnCA,MAAOzD,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SACjDG,EAAUV,IAEhB,OACE,kBAAC,IAAD,CAAeK,QAASyD,EAAWxD,YAAaA,GAC9C,kBAAC,IAAD,CAAKE,UAAWE,EAAQuD,MACtB,kBAAC,IAAD,CAAKzD,UAAWE,EAAQyD,aAAc5D,GACtC,kBAAC,IAAD,CAAQsE,QAAM,GACZ,kBAAC,IAAD,CAAKrE,UAAWE,EAAQ6D,gBACtB,kBAAC,IAAD,CAAYnC,UAAU,KAAKC,QAAQ,MAAnC,YAGA,kBAAC,IAAD,KACG0B,EAAMhB,KAAI,SAAC+B,EAAM7B,GAAP,OACT,kBAAC,IAAD,CAAUE,IAAKF,EAAO8B,OAAK,EAACC,QAAM,EAAC5C,UAAU,IAAI6C,KAAI,WAAMH,EAAKxB,OAC9D,kBAAC,IAAD,CAAc4B,QAASJ,EAAK1B,mB,qHCvC/B+B,cAA4BC,gBAAoB,OAAQ,CACrEC,EAAG,wJACD,a,SCiDWC,mBAhDF,SAAgBpE,GAC3B,MAAO,CACL+C,KAAM,CACJ7C,QAAS,OACTmE,WAAYrE,EAAMsE,QAAQ,IAC1BC,YAAavE,EAAMsE,QAAQ,IAC3BE,gBAAiBxE,EAAMyE,QAAQC,KAAK,KACpCjD,MAAOzB,EAAMyE,QAAQC,KAAK,KAC1BC,aAAc,EACdC,OAAQ,UACR,mBAAoB,CAClBJ,gBAAiBxE,EAAMyE,QAAQC,KAAK,MAEtC,WAAY,CACVG,UAAW7E,EAAM8E,QAAQ,GACzBN,gBAAiBO,YAAU/E,EAAMyE,QAAQC,KAAK,KAAM,OAGxDM,KAAM,CACJ/F,MAAO,GACPqE,OAAQ,OA4BoB,CAChC2B,KAAM,8BADOb,EAnBf,SAA6Bc,GAC3B,IAAI1F,EAAU0F,EAAM1F,QAChB2F,EAAQC,YAAyBF,EAAO,CAAC,YAE7C,OAAoBhB,gBAAoBmB,IAAYC,YAAS,CAC3DpE,UAAW,KACX5B,UAAWE,EAAQuD,KACnBwC,aAAa,GACZJ,GAAqBjB,gBAAoBsB,EAAe,CACzDlG,UAAWE,EAAQwF,WCKvB,IAAIrD,EAA2BuC,cAAiB,SAAqBgB,EAAOO,GAC1E,IAAIpG,EAAW6F,EAAM7F,SACjBG,EAAU0F,EAAM1F,QAChBF,EAAY4F,EAAM5F,UAClBoG,EAAmBR,EAAMhE,UACzByE,OAAiC,IAArBD,EAA8B,MAAQA,EAClDE,EAAoBV,EAAMW,WAC1BA,OAAmC,IAAtBD,EAA+B,YAAcA,EAC1DE,EAAwBZ,EAAMa,mBAC9BA,OAA+C,IAA1BD,EAAmC,EAAIA,EAC5DE,EAAwBd,EAAMe,oBAC9BA,OAAgD,IAA1BD,EAAmC,EAAIA,EAC7DE,EAAkBhB,EAAMiB,SACxBA,OAA+B,IAApBD,EAA6B,EAAIA,EAC5CE,EAAmBlB,EAAMmB,UACzBA,OAAiC,IAArBD,EAA8B,IAAMA,EAChDjB,EAAQC,YAAyBF,EAAO,CAAC,WAAY,UAAW,YAAa,YAAa,aAAc,qBAAsB,sBAAuB,WAAY,cAEjKoB,EAAkBpC,YAAe,GACjCqC,EAAWD,EAAgB,GAC3BE,EAAcF,EAAgB,GA+B9BG,EAAWvC,WAAewC,QAAQrH,GAAUsH,QAAO,SAAUC,GAO/D,OAAoB1C,iBAAqB0C,MACxC/E,KAAI,SAAU+E,EAAO7E,GACtB,OAAoBmC,gBAAoB,KAAM,CAC5C5E,UAAWE,EAAQqH,GACnB5E,IAAK,SAAS6E,OAAO/E,IACpB6E,MAEL,OAAoB1C,gBAAoBjD,IAAYqE,YAAS,CAC3DG,IAAKA,EACLvE,UAAWyE,EACXlE,MAAO,gBACPnC,UAAWO,kBAAKL,EAAQuD,KAAMzD,IAC7B6F,GAAqBjB,gBAAoB,KAAM,CAChD5E,UAAWE,EAAQuH,IAvFvB,SAA0BhH,EAAOT,EAAW+G,GAC1C,OAAOtG,EAAMiH,QAAO,SAAUC,EAAKC,EAASnF,GAW1C,OAVIA,EAAQhC,EAAMoH,OAAS,EACzBF,EAAMA,EAAIH,OAAOI,EAAsBhD,gBAAoB,KAAM,CAC/D,eAAe,EACfjC,IAAK,aAAa6E,OAAO/E,GACzBzC,UAAWA,GACV+G,IAEHY,EAAIG,KAAKF,GAGJD,IACN,IA2EAI,CAAiBd,GAAYJ,GAAYM,EAASU,QAAUhB,EAAWM,EAlD1C,SAAmCA,GAcjE,OAAIR,EAAsBF,GAAsBU,EAASU,OAKhDV,EAGF,GAAGK,OAAOQ,YAAmBb,EAASc,MAAM,EAAGtB,IAAuB,CAAc/B,gBAAoBsD,EAAqB,CAClI,aAAc3B,EACd5D,IAAK,WACLwF,QAxBsB,SAA2BC,GACjDlB,GAAY,GAGZ,IAAImB,EAAYD,EAAME,cAAcC,WAAWC,cAAc,6BAEzDH,GACFA,EAAUI,YAkBTT,YAAmBb,EAASc,MAAMd,EAASU,OAASpB,EAAoBU,EAASU,UAwBHa,CAA0BvB,GAAWjH,EAAQ6G,UAAWA,QA6DhIjC,gBA/KK,CAElBrB,KAAM,GAGNgE,GAAI,CACF7G,QAAS,OACT8C,SAAU,OACV1C,WAAY,SACZ2H,QAAS,EACTC,OAAQ,EACRC,UAAW,QAIbtB,GAAI,GAGJR,UAAW,CACTnG,QAAS,OACTkI,WAAY,OACZ/D,WAAY,EACZE,YAAa,IAyJiB,CAChCU,KAAM,kBADOb,CAEZzC,I,kCCzLH,IAAI0G,EAAyBC,EAAQ,IAEjCC,EAA0BD,EAAQ,IAEtCE,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAI1E,EAAQqE,EAAwBD,EAAQ,IAIxCO,GAAW,EAFMR,EAAuBC,EAAQ,KAElBM,SAAuB1E,EAAM4E,cAAc,OAAQ,CACnF3E,EAAG,sDACD,SAEJuE,EAAQE,QAAUC,G,kCCjBlB,IAAIR,EAAyBC,EAAQ,IAEjCC,EAA0BD,EAAQ,IAEtCE,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAI1E,EAAQqE,EAAwBD,EAAQ,IAIxCO,GAAW,EAFMR,EAAuBC,EAAQ,KAElBM,SAAuB1E,EAAM4E,cAAc,OAAQ,CACnF3E,EAAG,iFACD,mBAEJuE,EAAQE,QAAUC,G,kCCjBlB,IAAIR,EAAyBC,EAAQ,IAEjCC,EAA0BD,EAAQ,IAEtCE,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAI1E,EAAQqE,EAAwBD,EAAQ,IAIxCO,GAAW,EAFMR,EAAuBC,EAAQ,KAElBM,SAAuB1E,EAAM4E,cAAc,OAAQ,CACnF3E,EAAG,gFACD,qBAEJuE,EAAQE,QAAUC,G,kCCjBlB,IAAIR,EAAyBC,EAAQ,IAEjCC,EAA0BD,EAAQ,IAEtCE,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAI1E,EAAQqE,EAAwBD,EAAQ,IAIxCO,GAAW,EAFMR,EAAuBC,EAAQ,KAElBM,SAAuB1E,EAAM4E,cAAc,OAAQ,CACnF3E,EAAG,gFACD,oBAEJuE,EAAQE,QAAUC,G,kCCjBlB,IAAIR,EAAyBC,EAAQ,IAEjCC,EAA0BD,EAAQ,IAEtCE,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAI1E,EAAQqE,EAAwBD,EAAQ,IAIxCO,GAAW,EAFMR,EAAuBC,EAAQ,KAElBM,SAAuB1E,EAAM4E,cAAc,OAAQ,CACnF3E,EAAG,0OACD,cAEJuE,EAAQE,QAAUC,G,kCCjBlB,IAAIR,EAAyBC,EAAQ,IAEjCC,EAA0BD,EAAQ,IAEtCE,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAI1E,EAAQqE,EAAwBD,EAAQ,IAIxCO,GAAW,EAFMR,EAAuBC,EAAQ,KAElBM,SAAuB1E,EAAM4E,cAAc,OAAQ,CACnF3E,EAAG,qDACD,gBAEJuE,EAAQE,QAAUC,G,kCCjBlB,IAAIR,EAAyBC,EAAQ,IAEjCC,EAA0BD,EAAQ,IAEtCE,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAI1E,EAAQqE,EAAwBD,EAAQ,IAIxCO,GAAW,EAFMR,EAAuBC,EAAQ,KAElBM,SAAuB1E,EAAM4E,cAAc,OAAQ,CACnF3E,EAAG,wHACD,oBAEJuE,EAAQE,QAAUC,G,kCCjBlB,IAAIR,EAAyBC,EAAQ,IAEjCC,EAA0BD,EAAQ,IAEtCE,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAI1E,EAAQqE,EAAwBD,EAAQ,IAIxCO,GAAW,EAFMR,EAAuBC,EAAQ,KAElBM,SAAuB1E,EAAM4E,cAAc,OAAQ,CACnF3E,EAAG,+EACD,sBAEJuE,EAAQE,QAAUC,G,kCCjBlB,IAAIR,EAAyBC,EAAQ,IAErCE,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAIG,EAASV,EAAuBC,EAAQ,IAIxCO,GAAW,EAFMR,EAAuBC,EAAQ,KAElBM,SAAuBG,EAAOH,QAAQE,cAAcC,EAAOH,QAAQI,SAAU,KAAmBD,EAAOH,QAAQE,cAAc,OAAQ,CACrK3E,EAAG,2PACY4E,EAAOH,QAAQE,cAAc,OAAQ,CACpDG,YAAa,MACb9E,EAAG,mBACA,mBAELuE,EAAQE,QAAUC,G,kCClBlB,IAAIR,EAAyBC,EAAQ,IAEjCC,EAA0BD,EAAQ,IAEtCE,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAI1E,EAAQqE,EAAwBD,EAAQ,IAIxCO,GAAW,EAFMR,EAAuBC,EAAQ,KAElBM,SAAuB1E,EAAM4E,cAAc,OAAQ,CACnF3E,EAAG,2FACD,YAEJuE,EAAQE,QAAUC,G,kCCjBlB,IAAIR,EAAyBC,EAAQ,IAEjCC,EAA0BD,EAAQ,IAEtCE,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAI1E,EAAQqE,EAAwBD,EAAQ,IAIxCO,GAAW,EAFMR,EAAuBC,EAAQ,KAElBM,SAAuB1E,EAAM4E,cAAc,OAAQ,CACnF3E,EAAG,4FACD,cAEJuE,EAAQE,QAAUC,G,kCCjBlB,IAAIR,EAAyBC,EAAQ,IAEjCC,EAA0BD,EAAQ,IAEtCE,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAI1E,EAAQqE,EAAwBD,EAAQ,IAIxCO,GAAW,EAFMR,EAAuBC,EAAQ,KAElBM,SAAuB1E,EAAM4E,cAAc,OAAQ,CACnF3E,EAAG,qEACD,aAEJuE,EAAQE,QAAUC,G,kCCjBlB,IAAIR,EAAyBC,EAAQ,IAEjCC,EAA0BD,EAAQ,IAEtCE,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAI1E,EAAQqE,EAAwBD,EAAQ,IAIxCO,GAAW,EAFMR,EAAuBC,EAAQ,KAElBM,SAAuB1E,EAAM4E,cAAc,OAAQ,CACnF3E,EAAG,2GACD,UAEJuE,EAAQE,QAAUC,G,kCCjBlB,IAAIR,EAAyBC,EAAQ,IAEjCC,EAA0BD,EAAQ,IAEtCE,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAI1E,EAAQqE,EAAwBD,EAAQ,IAIxCO,GAAW,EAFMR,EAAuBC,EAAQ,KAElBM,SAAuB1E,EAAM4E,cAAc,OAAQ,CACnF3E,EAAG,kHACD,MAEJuE,EAAQE,QAAUC,G,kCCjBlB,IAAIR,EAAyBC,EAAQ,IAEjCC,EAA0BD,EAAQ,IAEtCE,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAI1E,EAAQqE,EAAwBD,EAAQ,IAIxCO,GAAW,EAFMR,EAAuBC,EAAQ,KAElBM,SAAuB1E,EAAM4E,cAAc,OAAQ,CACnF3E,EAAG,oIACD,gBAEJuE,EAAQE,QAAUC,G,qBCnBlB,IAAIhH,EAAM,CACT,2BAA4B,KAC5B,+BAAgC,KAChC,6BAA8B,KAC9B,0BAA2B,KAC3B,+BAAgC,KAChC,8BAA+B,KAC/B,8BAA+B,MAIhC,SAASqH,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAE1H,EAAKsH,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAO3H,EAAIsH,GAEZD,EAAeS,KAAO,WACrB,OAAOnB,OAAOmB,KAAK9H,IAEpBqH,EAAeU,QAAUP,EACzBQ,EAAOnB,QAAUQ,EACjBA,EAAeE,GAAK,M,kCC5BpB,OAAe,ksH,kCCAf,OAAe,uf,kCCAf,OAAe,m6F,kCCAf,OAAe,wuF,kCCAf,OAAe,o3C,kCCAf,OAAe,65C,kCCAf,OAAe,miC,4RCyEXU,EAA4B5F,cAAiB,SAAsBgB,EAAOO,GAC5E,IAAIpG,EAAW6F,EAAM7F,SACjBG,EAAU0F,EAAM1F,QAChBF,EAAY4F,EAAM5F,UAClByK,EAAkB7E,EAAM8E,SACxBA,OAA+B,IAApBD,GAAqCA,EAChDE,EAAwB/E,EAAMgF,mBAC9BA,OAA+C,IAA1BD,GAA2CA,EAChEE,EAAWjF,EAAMiF,SACjB1C,EAAUvC,EAAMuC,QAChB2C,EAAWlF,EAAMkF,SACjBC,EAAcnF,EAAMoF,KACpBA,OAAuB,IAAhBD,EAAyB,SAAWA,EAC3C1B,EAAQzD,EAAMyD,MACdxD,EAAQC,YAAyBF,EAAO,CAAC,WAAY,UAAW,YAAa,WAAY,qBAAsB,WAAY,UAAW,WAAY,OAAQ,UAgB9J,OAAoBhB,gBAAoBmB,IAAYC,YAAS,CAC3DhG,UAAWO,kBAAKL,EAAQuD,KAAMzD,EAAW0K,GAAYxK,EAAQwK,SAAUI,GAAY5K,EAAQ4K,SAAmB,WAATE,GAAqB9K,EAAQ,OAAOsH,OAAOyD,YAAWD,MAC3JN,SAAUA,EACVzE,aAAc2E,EACdzE,IAAKA,EACLgC,QAnBiB,SAAsBC,GACnCD,IACFA,EAAQC,EAAOiB,GAEXjB,EAAM8C,uBAKRL,GACFA,EAASzC,EAAOiB,IAUlBwB,SAAUA,EACVxB,MAAOA,EACP,eAAgByB,GACfjF,GAAqBjB,gBAAoB,OAAQ,CAClD5E,UAAWE,EAAQ0C,OAClB7C,OA4DU+E,eArKK,SAAgBpE,GAClC,MAAO,CAEL+C,KAAMuC,YAAS,GAAItF,EAAMmD,WAAWW,OAAQ,CAC1C2G,UAAW,aACX9F,aAAc3E,EAAM0K,MAAM/F,aAC1BsD,QAAS,GACT0C,OAAQ,aAAa7D,OAAO8D,YAAM5K,EAAMyE,QAAQoG,OAAOC,OAAQ,MAC/DrJ,MAAOmJ,YAAM5K,EAAMyE,QAAQoG,OAAOC,OAAQ,KAC1C,aAAc,CACZrJ,MAAOzB,EAAMyE,QAAQoG,OAAOC,OAC5BtG,gBAAiBoG,YAAM5K,EAAMyE,QAAQoG,OAAOC,OAAQ,KACpD,UAAW,CACTtG,gBAAiBoG,YAAM5K,EAAMyE,QAAQoG,OAAOC,OAAQ,MAEtD,QAAS,CACPC,WAAY,EACZ1G,WAAY,IAGhB,aAAc,CACZ5C,MAAOmJ,YAAM5K,EAAMyE,QAAQoG,OAAOb,SAAU,MAE9C,UAAW,CACTgB,eAAgB,OAEhBxG,gBAAiBoG,YAAM5K,EAAMyE,QAAQwG,KAAKjH,QAAS,KACnD,uBAAwB,CACtBQ,gBAAiB,eAEnB,aAAc,CACZA,gBAAiB,kBAMvBwF,SAAU,GAGVI,SAAU,GAGVlI,MAAO,CACLjD,MAAO,OAEPiB,QAAS,UACTI,WAAY,UACZ4K,eAAgB,WAIlBC,UAAW,CACTlD,QAAS,EACT1G,SAAUvB,EAAMmD,WAAWC,QAAQ,KAIrCgI,UAAW,CACTnD,QAAS,GACT1G,SAAUvB,EAAMmD,WAAWC,QAAQ,QAyGP,CAChC6B,KAAM,mBADOb,CAEZ0F,G,OC9KY,SAASuB,EAAgB1C,EAAO2C,GAC7C,YAAkBC,IAAdD,QAAqCC,IAAV5C,IAI3B6C,MAAMC,QAAQH,GACTA,EAAUI,QAAQ/C,IAAU,EAG9BA,IAAU2C,GCFZ,IA6CHK,EAAiCzH,cAAiB,SAAsBgB,EAAOO,GACjF,IAAIpG,EAAW6F,EAAM7F,SACjBG,EAAU0F,EAAM1F,QAChBF,EAAY4F,EAAM5F,UAClBsM,EAAmB1G,EAAM2G,UACzBA,OAAiC,IAArBD,GAAsCA,EAClDzB,EAAWjF,EAAMiF,SACjB2B,EAAqB5G,EAAM6G,YAC3BA,OAAqC,IAAvBD,EAAgC,aAAeA,EAC7DzB,EAAcnF,EAAMoF,KACpBA,OAAuB,IAAhBD,EAAyB,SAAWA,EAC3C1B,EAAQzD,EAAMyD,MACdxD,EAAQC,YAAyBF,EAAO,CAAC,WAAY,UAAW,YAAa,YAAa,WAAY,cAAe,OAAQ,UAE7H8G,EAAe,SAAsBtE,EAAOuE,GAC9C,GAAK9B,EAAL,CAIA,IACI+B,EADAnK,EAAQ4G,GAASA,EAAM+C,QAAQO,GAG/BtD,GAAS5G,GAAS,GACpBmK,EAAWvD,EAAMpB,SACR4E,OAAOpK,EAAO,GAEvBmK,EAAWvD,EAAQA,EAAM7B,OAAOmF,GAAe,CAACA,GAGlD9B,EAASzC,EAAOwE,KAGdE,EAAwB,SAA+B1E,EAAOuE,GAC3D9B,GAILA,EAASzC,EAAOiB,IAAUsD,EAAc,KAAOA,IAGjD,OAAoB/H,gBAAoB,MAAOoB,YAAS,CACtD+G,KAAM,QACN/M,UAAWO,kBAAKL,EAAQuD,KAAMzD,EAA2B,aAAhByM,GAA8BvM,EAAQ8M,UAC/E7G,IAAKA,GACJN,GAAQjB,WAAerC,IAAIxC,GAAU,SAAUuH,GAChD,OAAmB1C,iBAAqB0C,GAUpB1C,eAAmB0C,EAAO,CAC5CtH,UAAWO,kBAAKL,EAAQ+M,QAAS/M,EAAQ,UAAUsH,OAAOyD,YAAWwB,KAAgBnF,EAAM1B,MAAM5F,WACjG6K,SAAU0B,EAAYO,EAAwBJ,EAC9C5B,cAAmCmB,IAAzB3E,EAAM1B,MAAMkF,SAAyBiB,EAAgBzE,EAAM1B,MAAMyD,MAAOA,GAAS/B,EAAM1B,MAAMkF,SACvGE,KAAM1D,EAAM1B,MAAMoF,MAAQA,IAbnB,YAwEElG,eAnKK,SAAgBpE,GAClC,MAAO,CAEL+C,KAAM,CACJ7C,QAAS,cACTyE,aAAc3E,EAAM0K,MAAM/F,cAI5B2H,SAAU,CACRnM,cAAe,UAIjBoM,QAAS,GAGTC,kBAAmB,CACjB,sBAAuB,CACrBnI,YAAa,EACb0G,WAAY,wBACZ0B,oBAAqB,EACrBC,uBAAwB,GAE1B,qBAAsB,CACpBC,qBAAsB,EACtBC,wBAAyB,IAK7BC,gBAAiB,CACf,sBAAuB,CACrBC,WAAY,EACZC,UAAW,wBACXN,oBAAqB,EACrBE,qBAAsB,GAExB,qBAAsB,CACpBD,uBAAwB,EACxBE,wBAAyB,OA2HC,CAChC3H,KAAM,wBADOb,CAEZuH,GCtKY,SAASqB,IACtB,MAAkC9I,IAAM+I,SAAS,QAAjD,mBAAOC,EAAP,KAAkBC,EAAlB,KAMA,OACE,kBAAC,EAAD,CAAmBxE,MAAOuE,EAAWrB,WAAS,EAAC1B,SALzB,SAACzC,EAAO0F,GAC9BD,EAAaC,IAI6DxL,aAAW,kBACnF,kBAAC,EAAD,CAAc+G,MAAM,OAAO/G,aAAW,gBACpC,kBAAC,IAAD,OAEF,kBAAC,EAAD,CAAc+G,MAAM,SAAS/G,aAAW,YACtC,kBAAC,IAAD,OAEF,kBAAC,EAAD,CAAc+G,MAAM,QAAQ/G,aAAW,iBACrC,kBAAC,IAAD,OAEF,kBAAC,EAAD,CAAc+G,MAAM,UAAU/G,aAAW,YAAYoI,UAAQ,GAC3D,kBAAC,IAAD,Q,kGClBO,SAASqD,IACtB,MAA8BnJ,IAAM+I,UAAS,iBAAM,CAAC,OAAQ,aAA5D,mBAAOK,EAAP,KAAgBC,EAAhB,KAMA,OACE,kBAAC,EAAD,CAAmB5E,MAAO2E,EAASnD,SALhB,SAACzC,EAAO8F,GAC3BD,EAAWC,IAIgD5L,aAAW,mBACpE,kBAAC,EAAD,CAAc+G,MAAM,OAAO/G,aAAW,QACpC,kBAAC,IAAD,OAEF,kBAAC,EAAD,CAAc+G,MAAM,SAAS/G,aAAW,UACtC,kBAAC,IAAD,OAEF,kBAAC,EAAD,CAAc+G,MAAM,aAAa/G,aAAW,cAC1C,kBAAC,IAAD,OAEF,kBAAC,EAAD,CAAc+G,MAAM,QAAQ/G,aAAW,QAAQoI,UAAQ,GACrD,kBAAC,IAAD,MACA,kBAAC,IAAD,Q,sBCnBO,SAASyD,IACtB,MAAkCvJ,IAAM+I,SAAS,QAAjD,mBAAOC,EAAP,KAAkBC,EAAlB,KAEMnB,EAAe,SAACtE,EAAO0F,GAC3BD,EAAaC,IAGf,OACE,kBAAC5K,EAAA,EAAD,CAAe8B,QAAS,EAAG5E,UAAU,SAASY,WAAW,UACvD,kBAACmC,EAAA,EAAD,CAAMX,MAAI,GACR,kBAAC,EAAD,CAAmBwI,KAAK,QAAQ3B,MAAOuE,EAAWrB,WAAS,EAAC1B,SAAU6B,GACpE,kBAAC,EAAD,CAAcrD,MAAM,QAClB,kBAAC,IAAD,CAAqBpH,SAAS,WAEhC,kBAAC,EAAD,CAAcoH,MAAM,UAClB,kBAAC,IAAD,CAAuBpH,SAAS,WAElC,kBAAC,EAAD,CAAcoH,MAAM,SAClB,kBAAC,IAAD,CAAsBpH,SAAS,WAEjC,kBAAC,EAAD,CAAcoH,MAAM,WAClB,kBAAC,IAAD,CAAwBpH,SAAS,aAIvC,kBAACkB,EAAA,EAAD,CAAMX,MAAI,GACR,kBAAC,EAAD,CAAmBwI,KAAK,SAAS3B,MAAOuE,EAAWrB,WAAS,EAAC1B,SAAU6B,GACrE,kBAAC,EAAD,CAAcrD,MAAM,QAClB,kBAAC,IAAD,OAEF,kBAAC,EAAD,CAAcA,MAAM,UAClB,kBAAC,IAAD,OAEF,kBAAC,EAAD,CAAcA,MAAM,SAClB,kBAAC,IAAD,OAEF,kBAAC,EAAD,CAAcA,MAAM,WAClB,kBAAC,IAAD,SAIN,kBAAClG,EAAA,EAAD,CAAMX,MAAI,GACR,kBAAC,EAAD,CAAmBwI,KAAK,QAAQ3B,MAAOuE,EAAWrB,WAAS,EAAC1B,SAAU6B,GACpE,kBAAC,EAAD,CAAcrD,MAAM,QAClB,kBAAC,IAAD,OAEF,kBAAC,EAAD,CAAcA,MAAM,UAClB,kBAAC,IAAD,OAEF,kBAAC,EAAD,CAAcA,MAAM,SAClB,kBAAC,IAAD,OAEF,kBAAC,EAAD,CAAcA,MAAM,WAClB,kBAAC,IAAD,U,6DCxDG,SAAS+E,IACtB,MAAwBxJ,IAAM+I,SAAS,QAAvC,mBAAOU,EAAP,KAAaC,EAAb,KAMA,OACE,kBAAC,EAAD,CAAmB7B,YAAY,WAAWpD,MAAOgF,EAAM9B,WAAS,EAAC1B,SAL9C,SAACzC,EAAOmG,GAC3BD,EAAQC,KAKN,kBAAC,EAAD,CAAclF,MAAM,OAAO/G,aAAW,QACpC,kBAAC,IAAD,OAEF,kBAAC,EAAD,CAAc+G,MAAM,SAAS/G,aAAW,UACtC,kBAAC,IAAD,OAEF,kBAAC,EAAD,CAAc+G,MAAM,QAAQ/G,aAAW,SACrC,kBAAC,IAAD,Q,+ECTF9C,GAAYC,aAAW,SAAAiB,GAAK,MAAK,CACrC8N,gBAAiB,CACf5F,OAAQlI,EAAMsE,QAAQ,EAAG,QAId,SAASyJ,KACtB,MAAkC7J,IAAM+I,SAAS,QAAjD,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA8BjJ,IAAM+I,UAAS,iBAAM,CAAC,YAApD,mBAAOK,EAAP,KAAgBC,EAAhB,KAcM/N,EAAUV,KAEhB,OACE,kBAAC0D,EAAA,EAAD,CAAe8B,QAAS,GACtB,kBAAC7B,EAAA,EAAD,CAAMX,MAAI,EAACT,GAAI,GAAIN,GAAI,GACrB,yBAAKzB,UAAWE,EAAQsO,iBACtB,kBAAC,EAAD,CAAmBnF,MAAOuE,EAAWrB,WAAS,EAAC1B,SAZ/B,SAACzC,EAAO0F,GACT,OAAjBA,GACFD,EAAaC,IAUiExL,aAAW,kBACnF,kBAAC,EAAD,CAAc+G,MAAM,OAAO/G,aAAW,gBACpC,kBAAC,IAAD,OAEF,kBAAC,EAAD,CAAc+G,MAAM,SAAS/G,aAAW,YACtC,kBAAC,IAAD,OAEF,kBAAC,EAAD,CAAc+G,MAAM,QAAQ/G,aAAW,iBACrC,kBAAC,IAAD,OAEF,kBAAC,EAAD,CAAc+G,MAAM,UAAU/G,aAAW,YAAYoI,UAAQ,GAC3D,kBAAC,IAAD,UAKR,kBAACvH,EAAA,EAAD,CAAMX,MAAI,EAACT,GAAI,GAAIN,GAAI,GACrB,yBAAKzB,UAAWE,EAAQsO,iBACtB,kBAAC,EAAD,CAAmBnF,MAAO2E,EAASnD,SApCtB,SAACzC,EAAO8F,GACvBA,EAAWrG,QACboG,EAAWC,IAkCoD5L,aAAW,UACpE,kBAAC,EAAD,CAAc+G,MAAM,SAAS/G,aAAW,UACtC,kBAAC,KAAD,OAEF,kBAAC,EAAD,CAAc+G,MAAM,KAAK/G,aAAW,MAClC,kBAAC,KAAD,OAEF,kBAAC,EAAD,CAAc+G,MAAM,QAAQ/G,aAAW,SACrC,kBAAC,KAAD,W,0BChEC,SAASoM,KACtB,MAAgC9J,IAAM+I,UAAS,GAA/C,mBAAO7C,EAAP,KAAiB6D,EAAjB,KAEA,OACE,kBAAC,EAAD,CACEtF,MAAM,QACNyB,SAAUA,EACVD,SAAU,WACR8D,GAAa7D,KAEf,kBAAC,KAAD,O,yBCEAtL,GAAYC,aAAW,SAAAiB,GAAK,MAAK,CACrCkO,MAAO,CACLhO,QAAS,OACTyK,OAAO,aAAD,OAAe3K,EAAMyE,QAAQ0J,SACnCnL,SAAU,QAEZmL,QAAS,CACPjG,OAAQlI,EAAMsE,QAAQ,EAAG,SAIvB8J,GAA0BhK,aAAW,SAAApE,GAAK,MAAK,CACnDuM,QAAS,CACPrE,OAAQlI,EAAMsE,QAAQ,IACtBqG,OAAQ,OACR,sBAAuB,CACrBhG,aAAc3E,EAAM0K,MAAM/F,cAE5B,gBAAiB,CACfA,aAAc3E,EAAM0K,MAAM/F,kBARAP,CAW5BuH,GAEW,SAAS0C,KACtB,MAAkCnK,IAAM+I,SAAS,QAAjD,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA8BjJ,IAAM+I,UAAS,iBAAM,CAAC,aAApD,mBAAOK,EAAP,KAAgBC,EAAhB,KAUM/N,EAAUV,KAEhB,OACE,6BACE,kBAACwP,GAAA,EAAD,CAAOC,UAAW,EAAGjP,UAAWE,EAAQ0O,OACtC,kBAACE,GAAD,CACE9D,KAAK,QACL3B,MAAOuE,EACPrB,WAAS,EACT1B,SAbgB,SAACzC,EAAO0F,GAC9BD,EAAaC,IAaPxL,aAAW,kBACX,kBAAC,EAAD,CAAc+G,MAAM,OAAO/G,aAAW,gBACpC,kBAAC,IAAD,OAEF,kBAAC,EAAD,CAAc+G,MAAM,SAAS/G,aAAW,YACtC,kBAAC,IAAD,OAEF,kBAAC,EAAD,CAAc+G,MAAM,QAAQ/G,aAAW,iBACrC,kBAAC,IAAD,OAEF,kBAAC,EAAD,CAAc+G,MAAM,UAAU/G,aAAW,YAAYoI,UAAQ,GAC3D,kBAAC,IAAD,QAGJ,kBAACwE,GAAA,EAAD,CAASC,UAAQ,EAAC1C,YAAY,WAAWzM,UAAWE,EAAQ2O,UAC5D,kBAACC,GAAD,CAAyB9D,KAAK,QAAQ3B,MAAO2E,EAASnD,SAjCvC,SAACzC,EAAO8F,GAC3BD,EAAWC,IAgCuE5L,aAAW,mBACvF,kBAAC,EAAD,CAAc+G,MAAM,OAAO/G,aAAW,QACpC,kBAAC,IAAD,OAEF,kBAAC,EAAD,CAAc+G,MAAM,SAAS/G,aAAW,UACtC,kBAAC,IAAD,OAEF,kBAAC,EAAD,CAAc+G,MAAM,aAAa/G,aAAW,cAC1C,kBAAC,IAAD,OAEF,kBAAC,EAAD,CAAc+G,MAAM,QAAQ/G,aAAW,QAAQoI,UAAQ,GACrD,kBAAC,IAAD,MACA,kBAAC,IAAD,UC5EZ,IAAMlL,GAAYC,aAAW,SAAAiB,GAAK,MAAK,CACrC0O,QAAS,CACP,qBAAsB,CACpBjO,aAAcT,EAAMmD,WAAWC,QAAQ,MAG3CuL,eAAgB,CACdlO,aAAcT,EAAMmD,WAAWC,QAAQ,SAIrCwL,GAAatG,QAMbuG,GAAQ,CACZ,CACE3M,MAAO,sBACPE,KAAM,sBACNlB,UAAW,kBAAC8L,EAAD,MACX8B,SAAU,gCAEZ,CACE5M,MAAO,qBACPE,KAAM,qBACNlB,UAAW,kBAACmM,EAAD,MACXyB,SAAU,+BAEZ,CACE5M,MAAO,QACPE,KAAM,QACNlB,UAAW,kBAACuM,EAAD,MACXqB,SAAU,2BAEZ,CACE5M,MAAO,mBACPE,KAAM,mBACNlB,UAAW,kBAACwM,EAAD,MACXoB,SAAU,+BAEZ,CACE5M,MAAO,oBACPE,KAAM,oBACNlB,UAAW,kBAAC6M,GAAD,MACXe,SAAU,8BAEZ,CACE5M,MAAO,2BACPE,KAAM,2BACNlB,UAAW,kBAAC8M,GAAD,MACXc,SAAU,gCAEZ,CACE5M,MAAO,2BACPE,KAAM,2BACNlB,UAAW,kBAACmN,GAAD,MACXS,SAAU,6BAIC,SAASC,KACtB,IAAMvP,EAAUV,KAChB,OACE,kBAAC,IAAD,CAAkB8D,UAAU,iBAAiBC,MAAOgM,IACjDA,GAAMhN,KAAI,SAAC+B,EAAM7B,GAAP,OACT,kBAACnB,EAAA,EAAD,CAAKqB,IAAKF,EAAOqH,GAAIxF,EAAKxB,KAAM9C,UAAWE,EAAQkP,SACjD,kBAACzN,EAAA,EAAD,CAAYC,UAAU,KAAKC,QAAQ,UAAU7B,UAAWE,EAAQmP,gBAC7D/K,EAAK1B,OAER,kBAAC8M,EAAA,EAAD,CAAgBtF,KAAMkF,GAAWhL,EAAKkL,UAAUlG,QAASqG,SAAS,OAC/DrL,EAAK1C","file":"static/js/54.a7ae92bc.chunk.js","sourcesContent":["import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport { PageBreadcrumbs, PageHeader } from '../index';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  pageFull: {\r\n    width: '100%',\r\n  },\r\n}));\r\n\r\nconst PageContainer = ({ heading, breadcrumbs, children, className, restProps }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Slide in={true} direction=\"up\" mountOnEnter unmountOnExit>\r\n      <Box className={clsx(classes.pageFull, className)} {...restProps}>\r\n        {(heading || breadcrumbs) && (\r\n          <PageHeader heading={heading} breadcrumbComponent={breadcrumbs && <PageBreadcrumbs items={breadcrumbs} />} />\r\n        )}\r\n        {children}\r\n      </Box>\r\n    </Slide>\r\n  );\r\n};\r\n\r\nexport default PageContainer;\r\n","import React from 'react';\r\nimport { Box, makeStyles, Typography } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageHeaderRoot: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    [theme.breakpoints.up('sm')]: {\r\n      alignItems: 'center',\r\n      flexDirection: 'row',\r\n    },\r\n  },\r\n  titleRoot: {\r\n    [theme.breakpoints.down('xs')]: {\r\n      marginBottom: 10,\r\n    },\r\n  },\r\n}));\r\n\r\nconst PageHeader = ({ heading, breadcrumbComponent, children, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box className={clsx(classes.pageHeaderRoot, 'page-header')} mb={{ xs: 5, md: 6, lg: 8 }} {...rest}>\r\n      <Typography component=\"div\" variant=\"h1\" className={clsx(classes.titleRoot, 'title')}>\r\n        {heading}\r\n      </Typography>\r\n      <Box ml={{ sm: 'auto' }}>{breadcrumbComponent}</Box>\r\n\r\n      {children}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PageHeader;\r\n","import React from 'react';\r\nimport { Breadcrumbs, makeStyles } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { NavLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  textSm: {\r\n    fontSize: 12,\r\n  },\r\n  linkBlock: {\r\n    display: 'block',\r\n    color: 'inherit',\r\n  },\r\n}));\r\n\r\nconst PageBreadcrumbs = ({ items, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Breadcrumbs className=\"bread-crumbs\" aria-label=\"breadcrumb {...rest}\">\r\n      {items.map((item, index) =>\r\n        item.isActive ? (\r\n          <Typography key={index} className={classes.textSm} color=\"textPrimary\">\r\n            {item.label}\r\n          </Typography>\r\n        ) : (\r\n          <NavLink key={index} className={clsx(classes.textSm, classes.linkBlock)} color=\"inherit\" to={item.link || '/'}>\r\n            {item.label}\r\n          </NavLink>\r\n        ),\r\n      )}\r\n    </Breadcrumbs>\r\n  );\r\n};\r\n\r\nexport default PageBreadcrumbs;\r\n","import React from 'react';\r\nimport { Box, Grid } from '@material-ui/core';\r\nimport CmtCard from '../../../../@coremat/CmtCard';\r\nimport { PageHeader } from '../index';\r\nimport GridContainer from '../../GridContainer';\r\nimport PageContainer from './PageContainer';\r\n\r\nconst CorematComponentDemo = ({ SourceCodeComponent, SettingsComponent, children }) => {\r\n  return (\r\n    <PageContainer>\r\n      <GridContainer>\r\n        <Grid item xs={12} md={7}>\r\n          <PageHeader heading=\"Preview\" />\r\n          <Box mb={8}>{children}</Box>\r\n          <CmtCard>{SourceCodeComponent}</CmtCard>\r\n        </Grid>\r\n        <Grid item xs={12} md={5}>\r\n          {SettingsComponent}\r\n        </Grid>\r\n      </GridContainer>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default CorematComponentDemo;\r\n","import React from 'react';\r\nimport ComponentsDemo from './ComponentsDemo';\r\n\r\nconst MuiComponentDemo = ({ pageTitle, menus, children }) => {\r\n  const breadcrumbs = [\r\n    { label: 'Home', link: '/' },\r\n    { label: 'Material UI Components', link: '/components/mui' },\r\n    { label: pageTitle, isActive: true },\r\n  ];\r\n  return (\r\n    <ComponentsDemo pageTitle={pageTitle} breadcrumbs={breadcrumbs} menus={menus}>\r\n      {children}\r\n    </ComponentsDemo>\r\n  );\r\n};\r\nexport default MuiComponentDemo;\r\n","import React from 'react';\r\nimport { Box, Hidden, List, ListItem, ListItemText, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PageContainer from './PageContainer';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  contentArea: {\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      paddingRight: theme.typography.pxToRem(30),\r\n      width: `calc(100% - ${theme.typography.pxToRem(175)})`,\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      paddingRight: theme.typography.pxToRem(54),\r\n    },\r\n  },\r\n  contentSidebar: {\r\n    width: theme.typography.pxToRem(175),\r\n    height: `calc(100vh - ${theme.typography.pxToRem(102)})`,\r\n    position: 'sticky',\r\n    top: 30,\r\n    overflowY: 'auto',\r\n    flexShrink: 0,\r\n  },\r\n}));\r\n\r\nconst ComponentsDemo = ({ pageTitle, menus, breadcrumbs, children }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <PageContainer heading={pageTitle} breadcrumbs={breadcrumbs}>\r\n      <Box className={classes.root}>\r\n        <Box className={classes.contentArea}>{children}</Box>\r\n        <Hidden xsDown>\r\n          <Box className={classes.contentSidebar}>\r\n            <Typography component=\"h4\" variant=\"h4\">\r\n              Contents\r\n            </Typography>\r\n            <List>\r\n              {menus.map((menu, index) => (\r\n                <ListItem key={index} dense button component=\"a\" href={`#${menu.link}`}>\r\n                  <ListItemText primary={menu.label} />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </Box>\r\n        </Hidden>\r\n      </Box>\r\n    </PageContainer>\r\n  );\r\n};\r\nexport default ComponentsDemo;\r\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreHoriz');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '../styles/withStyles';\nimport { emphasize } from '../styles/colorManipulator';\nimport MoreHorizIcon from '../internal/svg-icons/MoreHoriz';\nimport ButtonBase from '../ButtonBase';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      display: 'flex',\n      marginLeft: theme.spacing(0.5),\n      marginRight: theme.spacing(0.5),\n      backgroundColor: theme.palette.grey[100],\n      color: theme.palette.grey[700],\n      borderRadius: 2,\n      cursor: 'pointer',\n      '&:hover, &:focus': {\n        backgroundColor: theme.palette.grey[200]\n      },\n      '&:active': {\n        boxShadow: theme.shadows[0],\n        backgroundColor: emphasize(theme.palette.grey[200], 0.12)\n      }\n    },\n    icon: {\n      width: 24,\n      height: 16\n    }\n  };\n};\n/**\n * @ignore - internal component.\n */\n\n\nfunction BreadcrumbCollapsed(props) {\n  var classes = props.classes,\n      other = _objectWithoutProperties(props, [\"classes\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    component: \"li\",\n    className: classes.root,\n    focusRipple: true\n  }, other), /*#__PURE__*/React.createElement(MoreHorizIcon, {\n    className: classes.icon\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? BreadcrumbCollapsed.propTypes = {\n  /**\n   * @ignore\n   */\n  classes: PropTypes.object.isRequired\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateBreadcrumbCollapsed'\n})(BreadcrumbCollapsed);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport BreadcrumbCollapsed from './BreadcrumbCollapsed';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the ol element. */\n  ol: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n    padding: 0,\n    margin: 0,\n    listStyle: 'none'\n  },\n\n  /* Styles applied to the li element. */\n  li: {},\n\n  /* Styles applied to the separator element. */\n  separator: {\n    display: 'flex',\n    userSelect: 'none',\n    marginLeft: 8,\n    marginRight: 8\n  }\n};\n\nfunction insertSeparators(items, className, separator) {\n  return items.reduce(function (acc, current, index) {\n    if (index < items.length - 1) {\n      acc = acc.concat(current, /*#__PURE__*/React.createElement(\"li\", {\n        \"aria-hidden\": true,\n        key: \"separator-\".concat(index),\n        className: className\n      }, separator));\n    } else {\n      acc.push(current);\n    }\n\n    return acc;\n  }, []);\n}\n\nvar Breadcrumbs = /*#__PURE__*/React.forwardRef(function Breadcrumbs(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'nav' : _props$component,\n      _props$expandText = props.expandText,\n      expandText = _props$expandText === void 0 ? 'Show path' : _props$expandText,\n      _props$itemsAfterColl = props.itemsAfterCollapse,\n      itemsAfterCollapse = _props$itemsAfterColl === void 0 ? 1 : _props$itemsAfterColl,\n      _props$itemsBeforeCol = props.itemsBeforeCollapse,\n      itemsBeforeCollapse = _props$itemsBeforeCol === void 0 ? 1 : _props$itemsBeforeCol,\n      _props$maxItems = props.maxItems,\n      maxItems = _props$maxItems === void 0 ? 8 : _props$maxItems,\n      _props$separator = props.separator,\n      separator = _props$separator === void 0 ? '/' : _props$separator,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"expandText\", \"itemsAfterCollapse\", \"itemsBeforeCollapse\", \"maxItems\", \"separator\"]);\n\n  var _React$useState = React.useState(false),\n      expanded = _React$useState[0],\n      setExpanded = _React$useState[1];\n\n  var renderItemsBeforeAndAfter = function renderItemsBeforeAndAfter(allItems) {\n    var handleClickExpand = function handleClickExpand(event) {\n      setExpanded(true); // The clicked element received the focus but gets removed from the DOM.\n      // Let's keep the focus in the component after expanding.\n\n      var focusable = event.currentTarget.parentNode.querySelector('a[href],button,[tabindex]');\n\n      if (focusable) {\n        focusable.focus();\n      }\n    }; // This defends against someone passing weird input, to ensure that if all\n    // items would be shown anyway, we just show all items without the EllipsisItem\n\n\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(['Material-UI: You have provided an invalid combination of props to the Breadcrumbs.', \"itemsAfterCollapse={\".concat(itemsAfterCollapse, \"} + itemsBeforeCollapse={\").concat(itemsBeforeCollapse, \"} >= maxItems={\").concat(maxItems, \"}\")].join('\\n'));\n      }\n\n      return allItems;\n    }\n\n    return [].concat(_toConsumableArray(allItems.slice(0, itemsBeforeCollapse)), [/*#__PURE__*/React.createElement(BreadcrumbCollapsed, {\n      \"aria-label\": expandText,\n      key: \"ellipsis\",\n      onClick: handleClickExpand\n    })], _toConsumableArray(allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)));\n  };\n\n  var allItems = React.Children.toArray(children).filter(function (child) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The Breadcrumbs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.isValidElement(child);\n  }).map(function (child, index) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: classes.li,\n      key: \"child-\".concat(index)\n    }, child);\n  });\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    ref: ref,\n    component: Component,\n    color: \"textSecondary\",\n    className: clsx(classes.root, className)\n  }, other), /*#__PURE__*/React.createElement(\"ol\", {\n    className: classes.ol\n  }, insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The breadcrumb children.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Override the default label for the expand button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  expandText: PropTypes.string,\n\n  /**\n   * If max items is exceeded, the number of items to show after the ellipsis.\n   */\n  itemsAfterCollapse: PropTypes.number,\n\n  /**\n   * If max items is exceeded, the number of items to show before the ellipsis.\n   */\n  itemsBeforeCollapse: PropTypes.number,\n\n  /**\n   * Specifies the maximum number of breadcrumbs to display. When there are more\n   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`\n   * will be shown, with an ellipsis in between.\n   */\n  maxItems: PropTypes.number,\n\n  /**\n   * Custom separator node.\n   */\n  separator: PropTypes.node\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiBreadcrumbs'\n})(Breadcrumbs);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"\n}), 'Check');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15 15H3v2h12v-2zm0-8H3v2h12V7zM3 13h18v-2H3v2zm0 8h18v-2H3v2zM3 3v2h18V3H3z\"\n}), 'FormatAlignLeft');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M7 15v2h10v-2H7zm-4 6h18v-2H3v2zm0-8h18v-2H3v2zm4-6v2h10V7H7zM3 3v2h18V3H3z\"\n}), 'FormatAlignCenter');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M3 21h18v-2H3v2zm6-4h12v-2H9v2zm-6-4h18v-2H3v2zm6-4h12V7H9v2zM3 3v2h18V3H3z\"\n}), 'FormatAlignRight');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15.6 10.79c.97-.67 1.65-1.77 1.65-2.79 0-2.26-1.75-4-4-4H7v14h7.04c2.09 0 3.71-1.7 3.71-3.79 0-1.52-.86-2.82-2.15-3.42zM10 6.5h3c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5h-3v-3zm3.5 9H10v-3h3.5c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5z\"\n}), 'FormatBold');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M10 4v3h2.21l-3.42 8H6v3h8v-3h-2.21l3.42-8H18V4z\"\n}), 'FormatItalic');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 17c3.31 0 6-2.69 6-6V3h-2.5v8c0 1.93-1.57 3.5-3.5 3.5S8.5 12.93 8.5 11V3H6v8c0 3.31 2.69 6 6 6zm-7 2v2h14v-2H5z\"\n}), 'FormatUnderlined');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M3 21h18v-2H3v2zm0-4h18v-2H3v2zm0-4h18v-2H3v2zm0-4h18V7H3v2zm0-6v2h18V3H3z\"\n}), 'FormatAlignJustify');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(\"path\", {\n  d: \"M16.56 8.94L7.62 0 6.21 1.41l2.38 2.38-5.15 5.15c-.59.59-.59 1.54 0 2.12l5.5 5.5c.29.29.68.44 1.06.44s.77-.15 1.06-.44l5.5-5.5c.59-.58.59-1.53 0-2.12zM5.21 10L10 5.21 14.79 10H5.21zM19 11.5s-2 2.17-2 3.5c0 1.1.9 2 2 2s2-.9 2-2c0-1.33-2-3.5-2-3.5z\"\n}), /*#__PURE__*/_react.default.createElement(\"path\", {\n  fillOpacity: \".36\",\n  d: \"M0 20h24v4H0z\"\n})), 'FormatColorFill');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M4 14h4v-4H4v4zm0 5h4v-4H4v4zM4 9h4V5H4v4zm5 5h12v-4H9v4zm0 5h12v-4H9v4zM9 5v4h12V5H9z\"\n}), 'ViewList');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M4 11h5V5H4v6zm0 7h5v-6H4v6zm6 0h5v-6h-5v6zm6 0h5v-6h-5v6zm-6-7h5V5h-5v6zm6-6v6h5V5h-5z\"\n}), 'ViewModule');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M10 18h5v-6h-5v6zm-6 0h5V5H4v13zm12 0h5v-6h-5v6zM10 5v6h11V5H10z\"\n}), 'ViewQuilt');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20 18c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2H4c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2H0v2h24v-2h-4zM4 6h16v10H4V6z\"\n}), 'Laptop');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M21 3H3c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h5v2h8v-2h5c1.1 0 1.99-.9 1.99-2L23 5c0-1.1-.9-2-2-2zm0 14H3V5h18v12z\"\n}), 'Tv');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M16 1H8C6.34 1 5 2.34 5 4v16c0 1.66 1.34 3 3 3h8c1.66 0 3-1.34 3-3V4c0-1.66-1.34-3-3-3zm-2 20h-4v-1h4v1zm3.25-3H6.75V4h10.5v14z\"\n}), 'PhoneAndroid');\n\nexports.default = _default;","var map = {\n\t\"./CustomizedDividers.txt\": 2981,\n\t\"./StandaloneToggleButton.txt\": 2982,\n\t\"./ToggleButtonNotEmpty.txt\": 2983,\n\t\"./ToggleButtonSizes.txt\": 2984,\n\t\"./ToggleButtonsExclusive.txt\": 2985,\n\t\"./ToggleButtonsMultiple.txt\": 2986,\n\t\"./VerticalToggleButtons.txt\": 2987\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 2980;","export default \"import React from 'react';\\r\\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\\r\\nimport FormatAlignLeftIcon from '@material-ui/icons/FormatAlignLeft';\\r\\nimport FormatAlignCenterIcon from '@material-ui/icons/FormatAlignCenter';\\r\\nimport FormatAlignRightIcon from '@material-ui/icons/FormatAlignRight';\\r\\nimport FormatAlignJustifyIcon from '@material-ui/icons/FormatAlignJustify';\\r\\nimport FormatBoldIcon from '@material-ui/icons/FormatBold';\\r\\nimport FormatItalicIcon from '@material-ui/icons/FormatItalic';\\r\\nimport FormatUnderlinedIcon from '@material-ui/icons/FormatUnderlined';\\r\\nimport FormatColorFillIcon from '@material-ui/icons/FormatColorFill';\\r\\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\\r\\nimport Divider from '@material-ui/core/Divider';\\r\\nimport Paper from '@material-ui/core/Paper';\\r\\nimport ToggleButton from '@material-ui/lab/ToggleButton';\\r\\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\\r\\n\\r\\nconst useStyles = makeStyles(theme => ({\\r\\n  paper: {\\r\\n    display: 'flex',\\r\\n    border: `1px solid ${theme.palette.divider}`,\\r\\n    flexWrap: 'wrap',\\r\\n  },\\r\\n  divider: {\\r\\n    margin: theme.spacing(1, 0.5),\\r\\n  },\\r\\n}));\\r\\n\\r\\nconst StyledToggleButtonGroup = withStyles(theme => ({\\r\\n  grouped: {\\r\\n    margin: theme.spacing(0.5),\\r\\n    border: 'none',\\r\\n    '&:not(:first-child)': {\\r\\n      borderRadius: theme.shape.borderRadius,\\r\\n    },\\r\\n    '&:first-child': {\\r\\n      borderRadius: theme.shape.borderRadius,\\r\\n    },\\r\\n  },\\r\\n}))(ToggleButtonGroup);\\r\\n\\r\\nexport default function CustomizedDividers() {\\r\\n  const [alignment, setAlignment] = React.useState('left');\\r\\n  const [formats, setFormats] = React.useState(() => ['italic']);\\r\\n\\r\\n  const handleFormat = (event, newFormats) => {\\r\\n    setFormats(newFormats);\\r\\n  };\\r\\n\\r\\n  const handleAlignment = (event, newAlignment) => {\\r\\n    setAlignment(newAlignment);\\r\\n  };\\r\\n\\r\\n  const classes = useStyles();\\r\\n\\r\\n  return (\\r\\n    <div>\\r\\n      <Paper elevation={0} className={classes.paper}>\\r\\n        <StyledToggleButtonGroup\\r\\n          size=\\\"small\\\"\\r\\n          value={alignment}\\r\\n          exclusive\\r\\n          onChange={handleAlignment}\\r\\n          aria-label=\\\"text alignment\\\">\\r\\n          <ToggleButton value=\\\"left\\\" aria-label=\\\"left aligned\\\">\\r\\n            <FormatAlignLeftIcon />\\r\\n          </ToggleButton>\\r\\n          <ToggleButton value=\\\"center\\\" aria-label=\\\"centered\\\">\\r\\n            <FormatAlignCenterIcon />\\r\\n          </ToggleButton>\\r\\n          <ToggleButton value=\\\"right\\\" aria-label=\\\"right aligned\\\">\\r\\n            <FormatAlignRightIcon />\\r\\n          </ToggleButton>\\r\\n          <ToggleButton value=\\\"justify\\\" aria-label=\\\"justified\\\" disabled>\\r\\n            <FormatAlignJustifyIcon />\\r\\n          </ToggleButton>\\r\\n        </StyledToggleButtonGroup>\\r\\n        <Divider flexItem orientation=\\\"vertical\\\" className={classes.divider} />\\r\\n        <StyledToggleButtonGroup size=\\\"small\\\" value={formats} onChange={handleFormat} aria-label=\\\"text formatting\\\">\\r\\n          <ToggleButton value=\\\"bold\\\" aria-label=\\\"bold\\\">\\r\\n            <FormatBoldIcon />\\r\\n          </ToggleButton>\\r\\n          <ToggleButton value=\\\"italic\\\" aria-label=\\\"italic\\\">\\r\\n            <FormatItalicIcon />\\r\\n          </ToggleButton>\\r\\n          <ToggleButton value=\\\"underlined\\\" aria-label=\\\"underlined\\\">\\r\\n            <FormatUnderlinedIcon />\\r\\n          </ToggleButton>\\r\\n          <ToggleButton value=\\\"color\\\" aria-label=\\\"color\\\" disabled>\\r\\n            <FormatColorFillIcon />\\r\\n            <ArrowDropDownIcon />\\r\\n          </ToggleButton>\\r\\n        </StyledToggleButtonGroup>\\r\\n      </Paper>\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\";","export default \"import React from 'react';\\r\\nimport CheckIcon from '@material-ui/icons/Check';\\r\\nimport ToggleButton from '@material-ui/lab/ToggleButton';\\r\\n\\r\\nexport default function StandaloneToggleButton() {\\r\\n  const [selected, setSelected] = React.useState(false);\\r\\n\\r\\n  return (\\r\\n    <ToggleButton\\r\\n      value=\\\"check\\\"\\r\\n      selected={selected}\\r\\n      onChange={() => {\\r\\n        setSelected(!selected);\\r\\n      }}>\\r\\n      <CheckIcon />\\r\\n    </ToggleButton>\\r\\n  );\\r\\n}\\r\\n\";","export default \"import React from 'react';\\r\\nimport { makeStyles } from '@material-ui/core/styles';\\r\\nimport FormatAlignLeftIcon from '@material-ui/icons/FormatAlignLeft';\\r\\nimport FormatAlignCenterIcon from '@material-ui/icons/FormatAlignCenter';\\r\\nimport FormatAlignRightIcon from '@material-ui/icons/FormatAlignRight';\\r\\nimport FormatAlignJustifyIcon from '@material-ui/icons/FormatAlignJustify';\\r\\nimport LaptopIcon from '@material-ui/icons/Laptop';\\r\\nimport TvIcon from '@material-ui/icons/Tv';\\r\\nimport PhoneAndroidIcon from '@material-ui/icons/PhoneAndroid';\\r\\nimport Grid from '@material-ui/core/Grid';\\r\\nimport ToggleButton from '@material-ui/lab/ToggleButton';\\r\\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\\r\\n\\r\\nconst useStyles = makeStyles(theme => ({\\r\\n  toggleContainer: {\\r\\n    margin: theme.spacing(2, 0),\\r\\n  },\\r\\n}));\\r\\n\\r\\nexport default function ToggleButtonNotEmpty() {\\r\\n  const [alignment, setAlignment] = React.useState('left');\\r\\n  const [formats, setFormats] = React.useState(() => ['phone']);\\r\\n\\r\\n  const handleFormat = (event, newFormats) => {\\r\\n    if (newFormats.length) {\\r\\n      setFormats(newFormats);\\r\\n    }\\r\\n  };\\r\\n\\r\\n  const handleAlignment = (event, newAlignment) => {\\r\\n    if (newAlignment !== null) {\\r\\n      setAlignment(newAlignment);\\r\\n    }\\r\\n  };\\r\\n\\r\\n  const classes = useStyles();\\r\\n\\r\\n  return (\\r\\n    <Grid container spacing={2}>\\r\\n      <Grid item sm={12} md={6}>\\r\\n        <div className={classes.toggleContainer}>\\r\\n          <ToggleButtonGroup value={alignment} exclusive onChange={handleAlignment} aria-label=\\\"text alignment\\\">\\r\\n            <ToggleButton value=\\\"left\\\" aria-label=\\\"left aligned\\\">\\r\\n              <FormatAlignLeftIcon />\\r\\n            </ToggleButton>\\r\\n            <ToggleButton value=\\\"center\\\" aria-label=\\\"centered\\\">\\r\\n              <FormatAlignCenterIcon />\\r\\n            </ToggleButton>\\r\\n            <ToggleButton value=\\\"right\\\" aria-label=\\\"right aligned\\\">\\r\\n              <FormatAlignRightIcon />\\r\\n            </ToggleButton>\\r\\n            <ToggleButton value=\\\"justify\\\" aria-label=\\\"justified\\\" disabled>\\r\\n              <FormatAlignJustifyIcon />\\r\\n            </ToggleButton>\\r\\n          </ToggleButtonGroup>\\r\\n        </div>\\r\\n      </Grid>\\r\\n      <Grid item sm={12} md={6}>\\r\\n        <div className={classes.toggleContainer}>\\r\\n          <ToggleButtonGroup value={formats} onChange={handleFormat} aria-label=\\\"device\\\">\\r\\n            <ToggleButton value=\\\"laptop\\\" aria-label=\\\"laptop\\\">\\r\\n              <LaptopIcon />\\r\\n            </ToggleButton>\\r\\n            <ToggleButton value=\\\"tv\\\" aria-label=\\\"tv\\\">\\r\\n              <TvIcon />\\r\\n            </ToggleButton>\\r\\n            <ToggleButton value=\\\"phone\\\" aria-label=\\\"phone\\\">\\r\\n              <PhoneAndroidIcon />\\r\\n            </ToggleButton>\\r\\n          </ToggleButtonGroup>\\r\\n        </div>\\r\\n      </Grid>\\r\\n    </Grid>\\r\\n  );\\r\\n}\\r\\n\";","export default \"import React from 'react';\\r\\nimport FormatAlignLeftIcon from '@material-ui/icons/FormatAlignLeft';\\r\\nimport FormatAlignCenterIcon from '@material-ui/icons/FormatAlignCenter';\\r\\nimport FormatAlignRightIcon from '@material-ui/icons/FormatAlignRight';\\r\\nimport FormatAlignJustifyIcon from '@material-ui/icons/FormatAlignJustify';\\r\\nimport Grid from '@material-ui/core/Grid';\\r\\nimport ToggleButton from '@material-ui/lab/ToggleButton';\\r\\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\\r\\n\\r\\nexport default function ToggleButtonSizes() {\\r\\n  const [alignment, setAlignment] = React.useState('left');\\r\\n\\r\\n  const handleChange = (event, newAlignment) => {\\r\\n    setAlignment(newAlignment);\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <Grid container spacing={2} direction=\\\"column\\\" alignItems=\\\"center\\\">\\r\\n      <Grid item>\\r\\n        <ToggleButtonGroup size=\\\"small\\\" value={alignment} exclusive onChange={handleChange}>\\r\\n          <ToggleButton value=\\\"left\\\">\\r\\n            <FormatAlignLeftIcon fontSize=\\\"small\\\" />\\r\\n          </ToggleButton>\\r\\n          <ToggleButton value=\\\"center\\\">\\r\\n            <FormatAlignCenterIcon fontSize=\\\"small\\\" />\\r\\n          </ToggleButton>\\r\\n          <ToggleButton value=\\\"right\\\">\\r\\n            <FormatAlignRightIcon fontSize=\\\"small\\\" />\\r\\n          </ToggleButton>\\r\\n          <ToggleButton value=\\\"justify\\\">\\r\\n            <FormatAlignJustifyIcon fontSize=\\\"small\\\" />\\r\\n          </ToggleButton>\\r\\n        </ToggleButtonGroup>\\r\\n      </Grid>\\r\\n      <Grid item>\\r\\n        <ToggleButtonGroup size=\\\"medium\\\" value={alignment} exclusive onChange={handleChange}>\\r\\n          <ToggleButton value=\\\"left\\\">\\r\\n            <FormatAlignLeftIcon />\\r\\n          </ToggleButton>\\r\\n          <ToggleButton value=\\\"center\\\">\\r\\n            <FormatAlignCenterIcon />\\r\\n          </ToggleButton>\\r\\n          <ToggleButton value=\\\"right\\\">\\r\\n            <FormatAlignRightIcon />\\r\\n          </ToggleButton>\\r\\n          <ToggleButton value=\\\"justify\\\">\\r\\n            <FormatAlignJustifyIcon />\\r\\n          </ToggleButton>\\r\\n        </ToggleButtonGroup>\\r\\n      </Grid>\\r\\n      <Grid item>\\r\\n        <ToggleButtonGroup size=\\\"large\\\" value={alignment} exclusive onChange={handleChange}>\\r\\n          <ToggleButton value=\\\"left\\\">\\r\\n            <FormatAlignLeftIcon />\\r\\n          </ToggleButton>\\r\\n          <ToggleButton value=\\\"center\\\">\\r\\n            <FormatAlignCenterIcon />\\r\\n          </ToggleButton>\\r\\n          <ToggleButton value=\\\"right\\\">\\r\\n            <FormatAlignRightIcon />\\r\\n          </ToggleButton>\\r\\n          <ToggleButton value=\\\"justify\\\">\\r\\n            <FormatAlignJustifyIcon />\\r\\n          </ToggleButton>\\r\\n        </ToggleButtonGroup>\\r\\n      </Grid>\\r\\n    </Grid>\\r\\n  );\\r\\n}\\r\\n\";","export default \"import React from 'react';\\r\\nimport FormatAlignLeftIcon from '@material-ui/icons/FormatAlignLeft';\\r\\nimport FormatAlignCenterIcon from '@material-ui/icons/FormatAlignCenter';\\r\\nimport FormatAlignRightIcon from '@material-ui/icons/FormatAlignRight';\\r\\nimport FormatAlignJustifyIcon from '@material-ui/icons/FormatAlignJustify';\\r\\nimport ToggleButton from '@material-ui/lab/ToggleButton';\\r\\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\\r\\n\\r\\nexport default function ToggleButtonsExclusive() {\\r\\n  const [alignment, setAlignment] = React.useState('left');\\r\\n\\r\\n  const handleAlignment = (event, newAlignment) => {\\r\\n    setAlignment(newAlignment);\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <ToggleButtonGroup value={alignment} exclusive onChange={handleAlignment} aria-label=\\\"text alignment\\\">\\r\\n      <ToggleButton value=\\\"left\\\" aria-label=\\\"left aligned\\\">\\r\\n        <FormatAlignLeftIcon />\\r\\n      </ToggleButton>\\r\\n      <ToggleButton value=\\\"center\\\" aria-label=\\\"centered\\\">\\r\\n        <FormatAlignCenterIcon />\\r\\n      </ToggleButton>\\r\\n      <ToggleButton value=\\\"right\\\" aria-label=\\\"right aligned\\\">\\r\\n        <FormatAlignRightIcon />\\r\\n      </ToggleButton>\\r\\n      <ToggleButton value=\\\"justify\\\" aria-label=\\\"justified\\\" disabled>\\r\\n        <FormatAlignJustifyIcon />\\r\\n      </ToggleButton>\\r\\n    </ToggleButtonGroup>\\r\\n  );\\r\\n}\\r\\n\";","export default \"import React from 'react';\\r\\nimport FormatBoldIcon from '@material-ui/icons/FormatBold';\\r\\nimport FormatItalicIcon from '@material-ui/icons/FormatItalic';\\r\\nimport FormatUnderlinedIcon from '@material-ui/icons/FormatUnderlined';\\r\\nimport FormatColorFillIcon from '@material-ui/icons/FormatColorFill';\\r\\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\\r\\nimport ToggleButton from '@material-ui/lab/ToggleButton';\\r\\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\\r\\n\\r\\nexport default function ToggleButtonsMultiple() {\\r\\n  const [formats, setFormats] = React.useState(() => ['bold', 'italic']);\\r\\n\\r\\n  const handleFormat = (event, newFormats) => {\\r\\n    setFormats(newFormats);\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <ToggleButtonGroup value={formats} onChange={handleFormat} aria-label=\\\"text formatting\\\">\\r\\n      <ToggleButton value=\\\"bold\\\" aria-label=\\\"bold\\\">\\r\\n        <FormatBoldIcon />\\r\\n      </ToggleButton>\\r\\n      <ToggleButton value=\\\"italic\\\" aria-label=\\\"italic\\\">\\r\\n        <FormatItalicIcon />\\r\\n      </ToggleButton>\\r\\n      <ToggleButton value=\\\"underlined\\\" aria-label=\\\"underlined\\\">\\r\\n        <FormatUnderlinedIcon />\\r\\n      </ToggleButton>\\r\\n      <ToggleButton value=\\\"color\\\" aria-label=\\\"color\\\" disabled>\\r\\n        <FormatColorFillIcon />\\r\\n        <ArrowDropDownIcon />\\r\\n      </ToggleButton>\\r\\n    </ToggleButtonGroup>\\r\\n  );\\r\\n}\\r\\n\";","export default \"import React from 'react';\\r\\nimport ViewListIcon from '@material-ui/icons/ViewList';\\r\\nimport ViewModuleIcon from '@material-ui/icons/ViewModule';\\r\\nimport ViewQuiltIcon from '@material-ui/icons/ViewQuilt';\\r\\nimport ToggleButton from '@material-ui/lab/ToggleButton';\\r\\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\\r\\n\\r\\nexport default function VerticalToggleButtons() {\\r\\n  const [view, setView] = React.useState('list');\\r\\n\\r\\n  const handleChange = (event, nextView) => {\\r\\n    setView(nextView);\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <ToggleButtonGroup orientation=\\\"vertical\\\" value={view} exclusive onChange={handleChange}>\\r\\n      <ToggleButton value=\\\"list\\\" aria-label=\\\"list\\\">\\r\\n        <ViewListIcon />\\r\\n      </ToggleButton>\\r\\n      <ToggleButton value=\\\"module\\\" aria-label=\\\"module\\\">\\r\\n        <ViewModuleIcon />\\r\\n      </ToggleButton>\\r\\n      <ToggleButton value=\\\"quilt\\\" aria-label=\\\"quilt\\\">\\r\\n        <ViewQuiltIcon />\\r\\n      </ToggleButton>\\r\\n    </ToggleButtonGroup>\\r\\n  );\\r\\n}\\r\\n\";","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n// @inheritedComponent ButtonBase\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { alpha, withStyles } from '@material-ui/core/styles';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport { capitalize } from '@material-ui/core/utils';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.button, {\n      boxSizing: 'border-box',\n      borderRadius: theme.shape.borderRadius,\n      padding: 11,\n      border: \"1px solid \".concat(alpha(theme.palette.action.active, 0.12)),\n      color: alpha(theme.palette.action.active, 0.38),\n      '&$selected': {\n        color: theme.palette.action.active,\n        backgroundColor: alpha(theme.palette.action.active, 0.12),\n        '&:hover': {\n          backgroundColor: alpha(theme.palette.action.active, 0.15)\n        },\n        '& + &': {\n          borderLeft: 0,\n          marginLeft: 0\n        }\n      },\n      '&$disabled': {\n        color: alpha(theme.palette.action.disabled, 0.12)\n      },\n      '&:hover': {\n        textDecoration: 'none',\n        // Reset on mouse devices\n        backgroundColor: alpha(theme.palette.text.primary, 0.05),\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        },\n        '&$disabled': {\n          backgroundColor: 'transparent'\n        }\n      }\n    }),\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `selected={true}`. */\n    selected: {},\n\n    /* Styles applied to the `label` wrapper element. */\n    label: {\n      width: '100%',\n      // Ensure the correct width for iOS Safari\n      display: 'inherit',\n      alignItems: 'inherit',\n      justifyContent: 'inherit'\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      padding: 7,\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"`. */\n    sizeLarge: {\n      padding: 15,\n      fontSize: theme.typography.pxToRem(15)\n    }\n  };\n};\nvar ToggleButton = /*#__PURE__*/React.forwardRef(function ToggleButton(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      onChange = props.onChange,\n      onClick = props.onClick,\n      selected = props.selected,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disabled\", \"disableFocusRipple\", \"onChange\", \"onClick\", \"selected\", \"size\", \"value\"]);\n\n  var handleChange = function handleChange(event) {\n    if (onClick) {\n      onClick(event, value);\n\n      if (event.isDefaultPrevented()) {\n        return;\n      }\n    }\n\n    if (onChange) {\n      onChange(event, value);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, className, disabled && classes.disabled, selected && classes.selected, size !== 'medium' && classes[\"size\".concat(capitalize(size))]),\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    ref: ref,\n    onClick: handleChange,\n    onChange: onChange,\n    value: value,\n    \"aria-pressed\": selected\n  }, other), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.label\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? ToggleButton.propTypes = {\n  /**\n   * The content of the button.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the button will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple will be disabled.\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * If `true`, the button will be rendered in an active state.\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n\n  /**\n   * The value to associate with the button when selected in a\n   * ToggleButtonGroup.\n   */\n  value: PropTypes.any.isRequired\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiToggleButton'\n})(ToggleButton);","// Determine if the toggle button value matches, or is contained in, the\n// candidate group value.\nexport default function isValueSelected(value, candidate) {\n  if (candidate === undefined || value === undefined) {\n    return false;\n  }\n\n  if (Array.isArray(candidate)) {\n    return candidate.indexOf(value) >= 0;\n  }\n\n  return value === candidate;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport isValueSelected from './isValueSelected';\nimport { withStyles } from '@material-ui/core/styles';\nimport { capitalize } from '@material-ui/core/utils';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `orientation=\"vertical\"`. */\n    vertical: {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the children. */\n    grouped: {},\n\n    /* Styles applied to the children if `orientation=\"horizontal\"`. */\n    groupedHorizontal: {\n      '&:not(:first-child)': {\n        marginLeft: -1,\n        borderLeft: '1px solid transparent',\n        borderTopLeftRadius: 0,\n        borderBottomLeftRadius: 0\n      },\n      '&:not(:last-child)': {\n        borderTopRightRadius: 0,\n        borderBottomRightRadius: 0\n      }\n    },\n\n    /* Styles applied to the children if `orientation=\"vertical\"`. */\n    groupedVertical: {\n      '&:not(:first-child)': {\n        marginTop: -1,\n        borderTop: '1px solid transparent',\n        borderTopLeftRadius: 0,\n        borderTopRightRadius: 0\n      },\n      '&:not(:last-child)': {\n        borderBottomLeftRadius: 0,\n        borderBottomRightRadius: 0\n      }\n    }\n  };\n};\nvar ToggleButtonGroup = /*#__PURE__*/React.forwardRef(function ToggleButton(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$exclusive = props.exclusive,\n      exclusive = _props$exclusive === void 0 ? false : _props$exclusive,\n      onChange = props.onChange,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"exclusive\", \"onChange\", \"orientation\", \"size\", \"value\"]);\n\n  var handleChange = function handleChange(event, buttonValue) {\n    if (!onChange) {\n      return;\n    }\n\n    var index = value && value.indexOf(buttonValue);\n    var newValue;\n\n    if (value && index >= 0) {\n      newValue = value.slice();\n      newValue.splice(index, 1);\n    } else {\n      newValue = value ? value.concat(buttonValue) : [buttonValue];\n    }\n\n    onChange(event, newValue);\n  };\n\n  var handleExclusiveChange = function handleExclusiveChange(event, buttonValue) {\n    if (!onChange) {\n      return;\n    }\n\n    onChange(event, value === buttonValue ? null : buttonValue);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    role: \"group\",\n    className: clsx(classes.root, className, orientation === 'vertical' && classes.vertical),\n    ref: ref\n  }, other), React.Children.map(children, function (child) {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The ToggleButtonGroup component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.cloneElement(child, {\n      className: clsx(classes.grouped, classes[\"grouped\".concat(capitalize(orientation))], child.props.className),\n      onChange: exclusive ? handleExclusiveChange : handleChange,\n      selected: child.props.selected === undefined ? isValueSelected(child.props.value, value) : child.props.selected,\n      size: child.props.size || size\n    });\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ToggleButtonGroup.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the button.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, only allow one of the child ToggleButton values to be selected.\n   */\n  exclusive: PropTypes.bool,\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {any} value of the selected buttons. When `exclusive` is true\n   * this is a single value; when false an array of selected values. If no value\n   * is selected and `exclusive` is true the value is null; when false an empty array.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The group orientation (layout flow direction).\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * The size of the buttons.\n   */\n  size: PropTypes.oneOf(['large', 'medium', 'small']),\n\n  /**\n   * The currently selected value within the group or an array of selected\n   * values when `exclusive` is false.\n   *\n   * The value must have reference equality with the option in order to be selected.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiToggleButtonGroup'\n})(ToggleButtonGroup);","import React from 'react';\r\nimport FormatAlignLeftIcon from '@material-ui/icons/FormatAlignLeft';\r\nimport FormatAlignCenterIcon from '@material-ui/icons/FormatAlignCenter';\r\nimport FormatAlignRightIcon from '@material-ui/icons/FormatAlignRight';\r\nimport FormatAlignJustifyIcon from '@material-ui/icons/FormatAlignJustify';\r\nimport ToggleButton from '@material-ui/lab/ToggleButton';\r\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\r\n\r\nexport default function ToggleButtonsExclusive() {\r\n  const [alignment, setAlignment] = React.useState('left');\r\n\r\n  const handleAlignment = (event, newAlignment) => {\r\n    setAlignment(newAlignment);\r\n  };\r\n\r\n  return (\r\n    <ToggleButtonGroup value={alignment} exclusive onChange={handleAlignment} aria-label=\"text alignment\">\r\n      <ToggleButton value=\"left\" aria-label=\"left aligned\">\r\n        <FormatAlignLeftIcon />\r\n      </ToggleButton>\r\n      <ToggleButton value=\"center\" aria-label=\"centered\">\r\n        <FormatAlignCenterIcon />\r\n      </ToggleButton>\r\n      <ToggleButton value=\"right\" aria-label=\"right aligned\">\r\n        <FormatAlignRightIcon />\r\n      </ToggleButton>\r\n      <ToggleButton value=\"justify\" aria-label=\"justified\" disabled>\r\n        <FormatAlignJustifyIcon />\r\n      </ToggleButton>\r\n    </ToggleButtonGroup>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport FormatBoldIcon from '@material-ui/icons/FormatBold';\r\nimport FormatItalicIcon from '@material-ui/icons/FormatItalic';\r\nimport FormatUnderlinedIcon from '@material-ui/icons/FormatUnderlined';\r\nimport FormatColorFillIcon from '@material-ui/icons/FormatColorFill';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport ToggleButton from '@material-ui/lab/ToggleButton';\r\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\r\n\r\nexport default function ToggleButtonsMultiple() {\r\n  const [formats, setFormats] = React.useState(() => ['bold', 'italic']);\r\n\r\n  const handleFormat = (event, newFormats) => {\r\n    setFormats(newFormats);\r\n  };\r\n\r\n  return (\r\n    <ToggleButtonGroup value={formats} onChange={handleFormat} aria-label=\"text formatting\">\r\n      <ToggleButton value=\"bold\" aria-label=\"bold\">\r\n        <FormatBoldIcon />\r\n      </ToggleButton>\r\n      <ToggleButton value=\"italic\" aria-label=\"italic\">\r\n        <FormatItalicIcon />\r\n      </ToggleButton>\r\n      <ToggleButton value=\"underlined\" aria-label=\"underlined\">\r\n        <FormatUnderlinedIcon />\r\n      </ToggleButton>\r\n      <ToggleButton value=\"color\" aria-label=\"color\" disabled>\r\n        <FormatColorFillIcon />\r\n        <ArrowDropDownIcon />\r\n      </ToggleButton>\r\n    </ToggleButtonGroup>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport FormatAlignLeftIcon from '@material-ui/icons/FormatAlignLeft';\r\nimport FormatAlignCenterIcon from '@material-ui/icons/FormatAlignCenter';\r\nimport FormatAlignRightIcon from '@material-ui/icons/FormatAlignRight';\r\nimport FormatAlignJustifyIcon from '@material-ui/icons/FormatAlignJustify';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ToggleButton from '@material-ui/lab/ToggleButton';\r\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\r\nimport GridContainer from '../../../../../@jumbo/components/GridContainer';\r\n\r\nexport default function ToggleButtonSizes() {\r\n  const [alignment, setAlignment] = React.useState('left');\r\n\r\n  const handleChange = (event, newAlignment) => {\r\n    setAlignment(newAlignment);\r\n  };\r\n\r\n  return (\r\n    <GridContainer spacing={2} direction=\"column\" alignItems=\"center\">\r\n      <Grid item>\r\n        <ToggleButtonGroup size=\"small\" value={alignment} exclusive onChange={handleChange}>\r\n          <ToggleButton value=\"left\">\r\n            <FormatAlignLeftIcon fontSize=\"small\" />\r\n          </ToggleButton>\r\n          <ToggleButton value=\"center\">\r\n            <FormatAlignCenterIcon fontSize=\"small\" />\r\n          </ToggleButton>\r\n          <ToggleButton value=\"right\">\r\n            <FormatAlignRightIcon fontSize=\"small\" />\r\n          </ToggleButton>\r\n          <ToggleButton value=\"justify\">\r\n            <FormatAlignJustifyIcon fontSize=\"small\" />\r\n          </ToggleButton>\r\n        </ToggleButtonGroup>\r\n      </Grid>\r\n      <Grid item>\r\n        <ToggleButtonGroup size=\"medium\" value={alignment} exclusive onChange={handleChange}>\r\n          <ToggleButton value=\"left\">\r\n            <FormatAlignLeftIcon />\r\n          </ToggleButton>\r\n          <ToggleButton value=\"center\">\r\n            <FormatAlignCenterIcon />\r\n          </ToggleButton>\r\n          <ToggleButton value=\"right\">\r\n            <FormatAlignRightIcon />\r\n          </ToggleButton>\r\n          <ToggleButton value=\"justify\">\r\n            <FormatAlignJustifyIcon />\r\n          </ToggleButton>\r\n        </ToggleButtonGroup>\r\n      </Grid>\r\n      <Grid item>\r\n        <ToggleButtonGroup size=\"large\" value={alignment} exclusive onChange={handleChange}>\r\n          <ToggleButton value=\"left\">\r\n            <FormatAlignLeftIcon />\r\n          </ToggleButton>\r\n          <ToggleButton value=\"center\">\r\n            <FormatAlignCenterIcon />\r\n          </ToggleButton>\r\n          <ToggleButton value=\"right\">\r\n            <FormatAlignRightIcon />\r\n          </ToggleButton>\r\n          <ToggleButton value=\"justify\">\r\n            <FormatAlignJustifyIcon />\r\n          </ToggleButton>\r\n        </ToggleButtonGroup>\r\n      </Grid>\r\n    </GridContainer>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ViewListIcon from '@material-ui/icons/ViewList';\r\nimport ViewModuleIcon from '@material-ui/icons/ViewModule';\r\nimport ViewQuiltIcon from '@material-ui/icons/ViewQuilt';\r\nimport ToggleButton from '@material-ui/lab/ToggleButton';\r\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\r\n\r\nexport default function VerticalToggleButtons() {\r\n  const [view, setView] = React.useState('list');\r\n\r\n  const handleChange = (event, nextView) => {\r\n    setView(nextView);\r\n  };\r\n\r\n  return (\r\n    <ToggleButtonGroup orientation=\"vertical\" value={view} exclusive onChange={handleChange}>\r\n      <ToggleButton value=\"list\" aria-label=\"list\">\r\n        <ViewListIcon />\r\n      </ToggleButton>\r\n      <ToggleButton value=\"module\" aria-label=\"module\">\r\n        <ViewModuleIcon />\r\n      </ToggleButton>\r\n      <ToggleButton value=\"quilt\" aria-label=\"quilt\">\r\n        <ViewQuiltIcon />\r\n      </ToggleButton>\r\n    </ToggleButtonGroup>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FormatAlignLeftIcon from '@material-ui/icons/FormatAlignLeft';\r\nimport FormatAlignCenterIcon from '@material-ui/icons/FormatAlignCenter';\r\nimport FormatAlignRightIcon from '@material-ui/icons/FormatAlignRight';\r\nimport FormatAlignJustifyIcon from '@material-ui/icons/FormatAlignJustify';\r\nimport LaptopIcon from '@material-ui/icons/Laptop';\r\nimport TvIcon from '@material-ui/icons/Tv';\r\nimport PhoneAndroidIcon from '@material-ui/icons/PhoneAndroid';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ToggleButton from '@material-ui/lab/ToggleButton';\r\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\r\nimport GridContainer from '../../../../../@jumbo/components/GridContainer';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  toggleContainer: {\r\n    margin: theme.spacing(2, 0),\r\n  },\r\n}));\r\n\r\nexport default function ToggleButtonNotEmpty() {\r\n  const [alignment, setAlignment] = React.useState('left');\r\n  const [formats, setFormats] = React.useState(() => ['phone']);\r\n\r\n  const handleFormat = (event, newFormats) => {\r\n    if (newFormats.length) {\r\n      setFormats(newFormats);\r\n    }\r\n  };\r\n\r\n  const handleAlignment = (event, newAlignment) => {\r\n    if (newAlignment !== null) {\r\n      setAlignment(newAlignment);\r\n    }\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <GridContainer spacing={2}>\r\n      <Grid item sm={12} md={6}>\r\n        <div className={classes.toggleContainer}>\r\n          <ToggleButtonGroup value={alignment} exclusive onChange={handleAlignment} aria-label=\"text alignment\">\r\n            <ToggleButton value=\"left\" aria-label=\"left aligned\">\r\n              <FormatAlignLeftIcon />\r\n            </ToggleButton>\r\n            <ToggleButton value=\"center\" aria-label=\"centered\">\r\n              <FormatAlignCenterIcon />\r\n            </ToggleButton>\r\n            <ToggleButton value=\"right\" aria-label=\"right aligned\">\r\n              <FormatAlignRightIcon />\r\n            </ToggleButton>\r\n            <ToggleButton value=\"justify\" aria-label=\"justified\" disabled>\r\n              <FormatAlignJustifyIcon />\r\n            </ToggleButton>\r\n          </ToggleButtonGroup>\r\n        </div>\r\n      </Grid>\r\n      <Grid item sm={12} md={6}>\r\n        <div className={classes.toggleContainer}>\r\n          <ToggleButtonGroup value={formats} onChange={handleFormat} aria-label=\"device\">\r\n            <ToggleButton value=\"laptop\" aria-label=\"laptop\">\r\n              <LaptopIcon />\r\n            </ToggleButton>\r\n            <ToggleButton value=\"tv\" aria-label=\"tv\">\r\n              <TvIcon />\r\n            </ToggleButton>\r\n            <ToggleButton value=\"phone\" aria-label=\"phone\">\r\n              <PhoneAndroidIcon />\r\n            </ToggleButton>\r\n          </ToggleButtonGroup>\r\n        </div>\r\n      </Grid>\r\n    </GridContainer>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport ToggleButton from '@material-ui/lab/ToggleButton';\r\n\r\nexport default function StandaloneToggleButton() {\r\n  const [selected, setSelected] = React.useState(false);\r\n\r\n  return (\r\n    <ToggleButton\r\n      value=\"check\"\r\n      selected={selected}\r\n      onChange={() => {\r\n        setSelected(!selected);\r\n      }}>\r\n      <CheckIcon />\r\n    </ToggleButton>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport FormatAlignLeftIcon from '@material-ui/icons/FormatAlignLeft';\r\nimport FormatAlignCenterIcon from '@material-ui/icons/FormatAlignCenter';\r\nimport FormatAlignRightIcon from '@material-ui/icons/FormatAlignRight';\r\nimport FormatAlignJustifyIcon from '@material-ui/icons/FormatAlignJustify';\r\nimport FormatBoldIcon from '@material-ui/icons/FormatBold';\r\nimport FormatItalicIcon from '@material-ui/icons/FormatItalic';\r\nimport FormatUnderlinedIcon from '@material-ui/icons/FormatUnderlined';\r\nimport FormatColorFillIcon from '@material-ui/icons/FormatColorFill';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ToggleButton from '@material-ui/lab/ToggleButton';\r\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  paper: {\r\n    display: 'flex',\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    flexWrap: 'wrap',\r\n  },\r\n  divider: {\r\n    margin: theme.spacing(1, 0.5),\r\n  },\r\n}));\r\n\r\nconst StyledToggleButtonGroup = withStyles(theme => ({\r\n  grouped: {\r\n    margin: theme.spacing(0.5),\r\n    border: 'none',\r\n    '&:not(:first-child)': {\r\n      borderRadius: theme.shape.borderRadius,\r\n    },\r\n    '&:first-child': {\r\n      borderRadius: theme.shape.borderRadius,\r\n    },\r\n  },\r\n}))(ToggleButtonGroup);\r\n\r\nexport default function CustomizedDividers() {\r\n  const [alignment, setAlignment] = React.useState('left');\r\n  const [formats, setFormats] = React.useState(() => ['italic']);\r\n\r\n  const handleFormat = (event, newFormats) => {\r\n    setFormats(newFormats);\r\n  };\r\n\r\n  const handleAlignment = (event, newAlignment) => {\r\n    setAlignment(newAlignment);\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Paper elevation={0} className={classes.paper}>\r\n        <StyledToggleButtonGroup\r\n          size=\"small\"\r\n          value={alignment}\r\n          exclusive\r\n          onChange={handleAlignment}\r\n          aria-label=\"text alignment\">\r\n          <ToggleButton value=\"left\" aria-label=\"left aligned\">\r\n            <FormatAlignLeftIcon />\r\n          </ToggleButton>\r\n          <ToggleButton value=\"center\" aria-label=\"centered\">\r\n            <FormatAlignCenterIcon />\r\n          </ToggleButton>\r\n          <ToggleButton value=\"right\" aria-label=\"right aligned\">\r\n            <FormatAlignRightIcon />\r\n          </ToggleButton>\r\n          <ToggleButton value=\"justify\" aria-label=\"justified\" disabled>\r\n            <FormatAlignJustifyIcon />\r\n          </ToggleButton>\r\n        </StyledToggleButtonGroup>\r\n        <Divider flexItem orientation=\"vertical\" className={classes.divider} />\r\n        <StyledToggleButtonGroup size=\"small\" value={formats} onChange={handleFormat} aria-label=\"text formatting\">\r\n          <ToggleButton value=\"bold\" aria-label=\"bold\">\r\n            <FormatBoldIcon />\r\n          </ToggleButton>\r\n          <ToggleButton value=\"italic\" aria-label=\"italic\">\r\n            <FormatItalicIcon />\r\n          </ToggleButton>\r\n          <ToggleButton value=\"underlined\" aria-label=\"underlined\">\r\n            <FormatUnderlinedIcon />\r\n          </ToggleButton>\r\n          <ToggleButton value=\"color\" aria-label=\"color\" disabled>\r\n            <FormatColorFillIcon />\r\n            <ArrowDropDownIcon />\r\n          </ToggleButton>\r\n        </StyledToggleButtonGroup>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { MuiComponentDemo } from '../../../../@jumbo/components/PageComponents';\r\nimport { Box, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CodeViewerCard from '../../../../@jumbo/components/Common/CodeViewerCard';\r\nimport ToggleButtonsExclusive from './demo/ToggleButtonsExclusive';\r\nimport ToggleButtonsMultiple from './demo/ToggleButtonsMultiple';\r\nimport ToggleButtonSizes from './demo/ToggleButtonSizes';\r\nimport VerticalToggleButtons from './demo/VerticalToggleButtons';\r\nimport ToggleButtonNotEmpty from './demo/ToggleButtonNotEmpty';\r\nimport StandaloneToggleButton from './demo/StandaloneToggleButton';\r\nimport CustomizedDividers from './demo/CustomizedDividers';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  section: {\r\n    '&:not(:last-child)': {\r\n      marginBottom: theme.typography.pxToRem(32),\r\n    },\r\n  },\r\n  sectionHeading: {\r\n    marginBottom: theme.typography.pxToRem(16),\r\n  },\r\n}));\r\n\r\nconst requireRaw = require.context(\r\n  '!raw-loader!../../../../@fake-db/mui-components/toggle-buttons',\r\n  false,\r\n  /\\.(txt|js|md|tsx)$/,\r\n);\r\n\r\nconst demos = [\r\n  {\r\n    label: 'Exclusive selection',\r\n    link: 'exclusive-selection',\r\n    component: <ToggleButtonsExclusive />,\r\n    filename: './ToggleButtonsExclusive.txt',\r\n  },\r\n  {\r\n    label: 'Multiple selection',\r\n    link: 'multiple-selection',\r\n    component: <ToggleButtonsMultiple />,\r\n    filename: './ToggleButtonsMultiple.txt',\r\n  },\r\n  {\r\n    label: 'Sizes',\r\n    link: 'sizes',\r\n    component: <ToggleButtonSizes />,\r\n    filename: './ToggleButtonSizes.txt',\r\n  },\r\n  {\r\n    label: 'Vertical buttons',\r\n    link: 'vertical-buttons',\r\n    component: <VerticalToggleButtons />,\r\n    filename: './VerticalToggleButtons.txt',\r\n  },\r\n  {\r\n    label: 'Enforce value set',\r\n    link: 'enforce-value-set',\r\n    component: <ToggleButtonNotEmpty />,\r\n    filename: './ToggleButtonNotEmpty.txt',\r\n  },\r\n  {\r\n    label: 'Standalone toggle button',\r\n    link: 'standalone-toggle-button',\r\n    component: <StandaloneToggleButton />,\r\n    filename: './StandaloneToggleButton.txt',\r\n  },\r\n  {\r\n    label: 'Customized toggle button',\r\n    link: 'customized-toggle-button',\r\n    component: <CustomizedDividers />,\r\n    filename: './CustomizedDividers.txt',\r\n  },\r\n];\r\n\r\nexport default function ToggleButtons() {\r\n  const classes = useStyles();\r\n  return (\r\n    <MuiComponentDemo pageTitle=\"Toggle Buttons\" menus={demos}>\r\n      {demos.map((menu, index) => (\r\n        <Box key={index} id={menu.link} className={classes.section}>\r\n          <Typography component=\"h3\" variant=\"inherit\" className={classes.sectionHeading}>\r\n            {menu.label}\r\n          </Typography>\r\n          <CodeViewerCard code={requireRaw(menu.filename).default} language=\"jsx\">\r\n            {menu.component}\r\n          </CodeViewerCard>\r\n        </Box>\r\n      ))}\r\n    </MuiComponentDemo>\r\n  );\r\n}\r\n"],"sourceRoot":""}