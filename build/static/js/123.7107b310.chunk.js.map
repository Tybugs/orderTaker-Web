{"version":3,"sources":["@jumbo/components/PageComponents/layouts/PageContainer.js","@jumbo/components/PageComponents/PageHeader.js","@jumbo/components/PageComponents/PageBreadcrumbs/index.js","@jumbo/components/PageComponents/layouts/CorematComponentDemo.js","@jumbo/components/PageComponents/layouts/MuiComponentDemo.js","@jumbo/components/PageComponents/layouts/ComponentsDemo.js","../node_modules/@material-ui/core/esm/internal/svg-icons/MoreHoriz.js","../node_modules/@material-ui/core/esm/Breadcrumbs/BreadcrumbCollapsed.js","../node_modules/@material-ui/core/esm/Breadcrumbs/Breadcrumbs.js","@coremat/CmtObjectSummary/CmtObjectSummary.style.js","@coremat/CmtObjectSummary/index.js","@coremat/CmtAvatarGroup/index.js","@jumbo/components/Common/formElements/AppCheckBox.js","../node_modules/@material-ui/lab/esm/AvatarGroup/AvatarGroup.js","routes/Components/CorematComponents/AvatarGroupDemo/DemoSettings.js","routes/Components/CorematComponents/AvatarGroupDemo/AvatarGroupView.js","routes/Components/CorematComponents/AvatarGroupDemo/AvatarGroupContextProvider.js","routes/Components/CorematComponents/AvatarGroupDemo/DemoSourceCode.js","routes/Components/CorematComponents/AvatarGroupDemo/index.js"],"names":["useStyles","makeStyles","pageFull","width","PageContainer","heading","breadcrumbs","children","className","restProps","classes","in","direction","mountOnEnter","unmountOnExit","clsx","breadcrumbComponent","items","theme","pageHeaderRoot","display","flexDirection","breakpoints","up","alignItems","titleRoot","down","marginBottom","PageHeader","rest","Box","mb","xs","md","lg","Typography","component","variant","ml","sm","textSm","fontSize","linkBlock","color","PageBreadcrumbs","Breadcrumbs","aria-label","map","item","index","isActive","key","label","to","link","CorematComponentDemo","SourceCodeComponent","SettingsComponent","GridContainer","Grid","CmtCard","MuiComponentDemo","pageTitle","menus","ComponentsDemo","root","flexWrap","contentArea","paddingRight","typography","pxToRem","contentSidebar","height","position","top","overflowY","flexShrink","xsDown","menu","dense","button","href","primary","createSvgIcon","React","d","withStyles","marginLeft","spacing","marginRight","backgroundColor","palette","grey","borderRadius","cursor","boxShadow","shadows","emphasize","icon","name","props","other","_objectWithoutProperties","ButtonBase","_extends","focusRipple","MoreHorizIcon","ref","_props$component","Component","_props$expandText","expandText","_props$itemsAfterColl","itemsAfterCollapse","_props$itemsBeforeCol","itemsBeforeCollapse","_props$maxItems","maxItems","_props$separator","separator","_React$useState","expanded","setExpanded","allItems","toArray","filter","child","li","concat","ol","reduce","acc","current","length","push","insertSeparators","_toConsumableArray","slice","BreadcrumbCollapsed","onClick","event","focusable","currentTarget","parentNode","querySelector","focus","renderItemsBeforeAndAfter","padding","margin","listStyle","userSelect","textAlign","marginTop","badgeRoot","badgeAvatarRoot","left","transform","paddingBottom","bottom","userInfo","title","text","subTitle","secondary","CmtObjectSummary","align","anchorOrigin","showItemBadge","avatar","avatarProps","badge","badgeProps","titleProps","subTitleProps","badgeContent","node","componentContent","CmtAvatar","src","alt","RenderBadge","Badge","vertical","horizontal","prototype","PropTypes","oneOfType","string","element","object","bool","defaultProps","memo","rootAvatarGroup","borderColor","avatarStyle","outlineColor","borderWidth","outlineThickness","transition","avatarActiveStyle","main","elevation","zIndex","totalRecords","getPlaceholderChar","str","phCharLength","substr","toUpperCase","CmtAvatarGroup","max","srcKey","titleKey","avatarSize","onItemClick","onMoreClick","expandable","renderItemSummary","renderMore","moreVisibleOn","itemStyle","activeItemStyle","tooltipProps","visibleItems","restItems","useState","openMoreTooltip","setOpenMoreTooltip","renderedMoreItems","setRenderedMoreItems","ttProps","open","useEffect","handleItemClick","size","style","toString","onClickAway","array","isRequired","number","oneOf","func","AppCheckbox","id","value","labelPlacement","checked","onChange","required","error","helperText","checkedIcon","control","SPACINGS","small","medium","AvatarGroup","childrenProp","_props$max","_props$spacing","clampedMax","extraAvatars","undefined","Avatar","border","background","default","DemoSettings","useContext","CorematContext","setExpandable","moreVisibleAction","setMoreVisibleAction","placeholderLength","setPlaceholderLength","setSize","target","AppRadioButton","flex","AppSlider","defaultValue","getAriaValueText","aria-labelledby","valueLabelDisplay","step","min","newValue","justifyContent","mt","common","white","avatarRoot","RenderRow","Fragment","pb","profile_pic","RenderMOre","CmtList","data","renderRow","AvatarGroupView","useTheme","avatars","coremat","JumboCard","AvatarGroupContextProvider","Provider","DemoSourceCode","dataString","JSON","stringify","sourceCode","CmtAvatarGroupDemo"],"mappings":"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","file":"static/js/123.7107b310.chunk.js","sourcesContent":["import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport { PageBreadcrumbs, PageHeader } from '../index';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  pageFull: {\r\n    width: '100%',\r\n  },\r\n}));\r\n\r\nconst PageContainer = ({ heading, breadcrumbs, children, className, restProps }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Slide in={true} direction=\"up\" mountOnEnter unmountOnExit>\r\n      <Box className={clsx(classes.pageFull, className)} {...restProps}>\r\n        {(heading || breadcrumbs) && (\r\n          <PageHeader heading={heading} breadcrumbComponent={breadcrumbs && <PageBreadcrumbs items={breadcrumbs} />} />\r\n        )}\r\n        {children}\r\n      </Box>\r\n    </Slide>\r\n  );\r\n};\r\n\r\nexport default PageContainer;\r\n","import React from 'react';\r\nimport { Box, makeStyles, Typography } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  pageHeaderRoot: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    [theme.breakpoints.up('sm')]: {\r\n      alignItems: 'center',\r\n      flexDirection: 'row',\r\n    },\r\n  },\r\n  titleRoot: {\r\n    [theme.breakpoints.down('xs')]: {\r\n      marginBottom: 10,\r\n    },\r\n  },\r\n}));\r\n\r\nconst PageHeader = ({ heading, breadcrumbComponent, children, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box className={clsx(classes.pageHeaderRoot, 'page-header')} mb={{ xs: 5, md: 6, lg: 8 }} {...rest}>\r\n      <Typography component=\"div\" variant=\"h1\" className={clsx(classes.titleRoot, 'title')}>\r\n        {heading}\r\n      </Typography>\r\n      <Box ml={{ sm: 'auto' }}>{breadcrumbComponent}</Box>\r\n\r\n      {children}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PageHeader;\r\n","import React from 'react';\r\nimport { Breadcrumbs, makeStyles } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { NavLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  textSm: {\r\n    fontSize: 12,\r\n  },\r\n  linkBlock: {\r\n    display: 'block',\r\n    color: 'inherit',\r\n  },\r\n}));\r\n\r\nconst PageBreadcrumbs = ({ items, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Breadcrumbs className=\"bread-crumbs\" aria-label=\"breadcrumb {...rest}\">\r\n      {items.map((item, index) =>\r\n        item.isActive ? (\r\n          <Typography key={index} className={classes.textSm} color=\"textPrimary\">\r\n            {item.label}\r\n          </Typography>\r\n        ) : (\r\n          <NavLink key={index} className={clsx(classes.textSm, classes.linkBlock)} color=\"inherit\" to={item.link || '/'}>\r\n            {item.label}\r\n          </NavLink>\r\n        ),\r\n      )}\r\n    </Breadcrumbs>\r\n  );\r\n};\r\n\r\nexport default PageBreadcrumbs;\r\n","import React from 'react';\r\nimport { Box, Grid } from '@material-ui/core';\r\nimport CmtCard from '../../../../@coremat/CmtCard';\r\nimport { PageHeader } from '../index';\r\nimport GridContainer from '../../GridContainer';\r\nimport PageContainer from './PageContainer';\r\n\r\nconst CorematComponentDemo = ({ SourceCodeComponent, SettingsComponent, children }) => {\r\n  return (\r\n    <PageContainer>\r\n      <GridContainer>\r\n        <Grid item xs={12} md={7}>\r\n          <PageHeader heading=\"Preview\" />\r\n          <Box mb={8}>{children}</Box>\r\n          <CmtCard>{SourceCodeComponent}</CmtCard>\r\n        </Grid>\r\n        <Grid item xs={12} md={5}>\r\n          {SettingsComponent}\r\n        </Grid>\r\n      </GridContainer>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default CorematComponentDemo;\r\n","import React from 'react';\r\nimport ComponentsDemo from './ComponentsDemo';\r\n\r\nconst MuiComponentDemo = ({ pageTitle, menus, children }) => {\r\n  const breadcrumbs = [\r\n    { label: 'Home', link: '/' },\r\n    { label: 'Material UI Components', link: '/components/mui' },\r\n    { label: pageTitle, isActive: true },\r\n  ];\r\n  return (\r\n    <ComponentsDemo pageTitle={pageTitle} breadcrumbs={breadcrumbs} menus={menus}>\r\n      {children}\r\n    </ComponentsDemo>\r\n  );\r\n};\r\nexport default MuiComponentDemo;\r\n","import React from 'react';\r\nimport { Box, Hidden, List, ListItem, ListItemText, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PageContainer from './PageContainer';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  contentArea: {\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      paddingRight: theme.typography.pxToRem(30),\r\n      width: `calc(100% - ${theme.typography.pxToRem(175)})`,\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      paddingRight: theme.typography.pxToRem(54),\r\n    },\r\n  },\r\n  contentSidebar: {\r\n    width: theme.typography.pxToRem(175),\r\n    height: `calc(100vh - ${theme.typography.pxToRem(102)})`,\r\n    position: 'sticky',\r\n    top: 30,\r\n    overflowY: 'auto',\r\n    flexShrink: 0,\r\n  },\r\n}));\r\n\r\nconst ComponentsDemo = ({ pageTitle, menus, breadcrumbs, children }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <PageContainer heading={pageTitle} breadcrumbs={breadcrumbs}>\r\n      <Box className={classes.root}>\r\n        <Box className={classes.contentArea}>{children}</Box>\r\n        <Hidden xsDown>\r\n          <Box className={classes.contentSidebar}>\r\n            <Typography component=\"h4\" variant=\"h4\">\r\n              Contents\r\n            </Typography>\r\n            <List>\r\n              {menus.map((menu, index) => (\r\n                <ListItem key={index} dense button component=\"a\" href={`#${menu.link}`}>\r\n                  <ListItemText primary={menu.label} />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </Box>\r\n        </Hidden>\r\n      </Box>\r\n    </PageContainer>\r\n  );\r\n};\r\nexport default ComponentsDemo;\r\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreHoriz');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '../styles/withStyles';\nimport { emphasize } from '../styles/colorManipulator';\nimport MoreHorizIcon from '../internal/svg-icons/MoreHoriz';\nimport ButtonBase from '../ButtonBase';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      display: 'flex',\n      marginLeft: theme.spacing(0.5),\n      marginRight: theme.spacing(0.5),\n      backgroundColor: theme.palette.grey[100],\n      color: theme.palette.grey[700],\n      borderRadius: 2,\n      cursor: 'pointer',\n      '&:hover, &:focus': {\n        backgroundColor: theme.palette.grey[200]\n      },\n      '&:active': {\n        boxShadow: theme.shadows[0],\n        backgroundColor: emphasize(theme.palette.grey[200], 0.12)\n      }\n    },\n    icon: {\n      width: 24,\n      height: 16\n    }\n  };\n};\n/**\n * @ignore - internal component.\n */\n\n\nfunction BreadcrumbCollapsed(props) {\n  var classes = props.classes,\n      other = _objectWithoutProperties(props, [\"classes\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    component: \"li\",\n    className: classes.root,\n    focusRipple: true\n  }, other), /*#__PURE__*/React.createElement(MoreHorizIcon, {\n    className: classes.icon\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? BreadcrumbCollapsed.propTypes = {\n  /**\n   * @ignore\n   */\n  classes: PropTypes.object.isRequired\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateBreadcrumbCollapsed'\n})(BreadcrumbCollapsed);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport BreadcrumbCollapsed from './BreadcrumbCollapsed';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the ol element. */\n  ol: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n    padding: 0,\n    margin: 0,\n    listStyle: 'none'\n  },\n\n  /* Styles applied to the li element. */\n  li: {},\n\n  /* Styles applied to the separator element. */\n  separator: {\n    display: 'flex',\n    userSelect: 'none',\n    marginLeft: 8,\n    marginRight: 8\n  }\n};\n\nfunction insertSeparators(items, className, separator) {\n  return items.reduce(function (acc, current, index) {\n    if (index < items.length - 1) {\n      acc = acc.concat(current, /*#__PURE__*/React.createElement(\"li\", {\n        \"aria-hidden\": true,\n        key: \"separator-\".concat(index),\n        className: className\n      }, separator));\n    } else {\n      acc.push(current);\n    }\n\n    return acc;\n  }, []);\n}\n\nvar Breadcrumbs = /*#__PURE__*/React.forwardRef(function Breadcrumbs(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'nav' : _props$component,\n      _props$expandText = props.expandText,\n      expandText = _props$expandText === void 0 ? 'Show path' : _props$expandText,\n      _props$itemsAfterColl = props.itemsAfterCollapse,\n      itemsAfterCollapse = _props$itemsAfterColl === void 0 ? 1 : _props$itemsAfterColl,\n      _props$itemsBeforeCol = props.itemsBeforeCollapse,\n      itemsBeforeCollapse = _props$itemsBeforeCol === void 0 ? 1 : _props$itemsBeforeCol,\n      _props$maxItems = props.maxItems,\n      maxItems = _props$maxItems === void 0 ? 8 : _props$maxItems,\n      _props$separator = props.separator,\n      separator = _props$separator === void 0 ? '/' : _props$separator,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"expandText\", \"itemsAfterCollapse\", \"itemsBeforeCollapse\", \"maxItems\", \"separator\"]);\n\n  var _React$useState = React.useState(false),\n      expanded = _React$useState[0],\n      setExpanded = _React$useState[1];\n\n  var renderItemsBeforeAndAfter = function renderItemsBeforeAndAfter(allItems) {\n    var handleClickExpand = function handleClickExpand(event) {\n      setExpanded(true); // The clicked element received the focus but gets removed from the DOM.\n      // Let's keep the focus in the component after expanding.\n\n      var focusable = event.currentTarget.parentNode.querySelector('a[href],button,[tabindex]');\n\n      if (focusable) {\n        focusable.focus();\n      }\n    }; // This defends against someone passing weird input, to ensure that if all\n    // items would be shown anyway, we just show all items without the EllipsisItem\n\n\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(['Material-UI: You have provided an invalid combination of props to the Breadcrumbs.', \"itemsAfterCollapse={\".concat(itemsAfterCollapse, \"} + itemsBeforeCollapse={\").concat(itemsBeforeCollapse, \"} >= maxItems={\").concat(maxItems, \"}\")].join('\\n'));\n      }\n\n      return allItems;\n    }\n\n    return [].concat(_toConsumableArray(allItems.slice(0, itemsBeforeCollapse)), [/*#__PURE__*/React.createElement(BreadcrumbCollapsed, {\n      \"aria-label\": expandText,\n      key: \"ellipsis\",\n      onClick: handleClickExpand\n    })], _toConsumableArray(allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)));\n  };\n\n  var allItems = React.Children.toArray(children).filter(function (child) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The Breadcrumbs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.isValidElement(child);\n  }).map(function (child, index) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: classes.li,\n      key: \"child-\".concat(index)\n    }, child);\n  });\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    ref: ref,\n    component: Component,\n    color: \"textSecondary\",\n    className: clsx(classes.root, className)\n  }, other), /*#__PURE__*/React.createElement(\"ol\", {\n    className: classes.ol\n  }, insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The breadcrumb children.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Override the default label for the expand button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  expandText: PropTypes.string,\n\n  /**\n   * If max items is exceeded, the number of items to show after the ellipsis.\n   */\n  itemsAfterCollapse: PropTypes.number,\n\n  /**\n   * If max items is exceeded, the number of items to show before the ellipsis.\n   */\n  itemsBeforeCollapse: PropTypes.number,\n\n  /**\n   * Specifies the maximum number of breadcrumbs to display. When there are more\n   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`\n   * will be shown, with an ellipsis in between.\n   */\n  maxItems: PropTypes.number,\n\n  /**\n   * Custom separator node.\n   */\n  separator: PropTypes.node\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiBreadcrumbs'\n})(Breadcrumbs);","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    '&.vertical': {\r\n      flexDirection: 'column',\r\n      textAlign: 'center',\r\n    },\r\n    '&.horizontal': {\r\n      '& $userInfo': {\r\n        marginLeft: 15,\r\n        marginTop: 0,\r\n      },\r\n    },\r\n  },\r\n  badgeRoot: {\r\n    backgroundColor: 'white',\r\n    boxShadow: '0 1px 3px 0 rgba(0, 0, 0, 0.15)',\r\n    borderRadius: 30,\r\n    padding: '4px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  badgeAvatarRoot: {\r\n    position: 'relative',\r\n    '&.top.center': {\r\n      marginTop: 14,\r\n    },\r\n    '&.top.center .MuiBadge-badge': {\r\n      top: 0,\r\n      left: '50%',\r\n      transform: 'translate(-50%, -50%)',\r\n    },\r\n    '&.bottom.left, &.bottom.center, &.bottom.right': {\r\n      marginBottom: 14,\r\n      '& .vertical': {\r\n        paddingBottom: 16,\r\n      },\r\n    },\r\n    '&.bottom.center .MuiBadge-badge': {\r\n      bottom: 0,\r\n      left: '50%',\r\n      transform: 'translate(-50%, 50%)',\r\n    },\r\n  },\r\n  userInfo: {\r\n    position: 'relative',\r\n    marginTop: 6,\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n    color: theme.palette.text.primary,\r\n    margin: 0,\r\n  },\r\n  subTitle: {\r\n    fontSize: 12,\r\n    color: theme.palette.text.secondary,\r\n    margin: 0,\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from 'react';\r\n\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Box, Badge } from '@material-ui/core';\r\n\r\nimport CmtAvatar from '../CmtAvatar';\r\nimport useStyles from './CmtObjectSummary.style';\r\n\r\nconst CmtObjectSummary = ({\r\n  align,\r\n  anchorOrigin,\r\n  showItemBadge,\r\n  avatar,\r\n  avatarProps,\r\n  badge,\r\n  badgeProps,\r\n  title,\r\n  titleProps,\r\n  subTitle,\r\n  subTitleProps,\r\n}) => {\r\n  const classes = useStyles({ align, anchorOrigin });\r\n\r\n  let badgeContent = {\r\n    badgeContent: badge,\r\n    color: 'secondary',\r\n    ...badgeProps,\r\n  };\r\n\r\n  if (typeof badge !== 'string') {\r\n    const node = <div className={clsx(classes.badgeRoot, 'Cmt-badge')}>{badge}</div>;\r\n    badgeContent = { badgeContent: node, ...badgeProps };\r\n  }\r\n\r\n  const getAvatarComponent = () => {\r\n    if (showItemBadge) {\r\n      if (typeof avatar === 'string') {\r\n        return <CmtAvatar src={avatar} alt={title} {...avatarProps} />;\r\n      }\r\n      return avatar;\r\n    }\r\n\r\n    return (\r\n      <RenderBadge {...{ badge, anchorOrigin, badgeContent, classes }}>\r\n        {typeof avatar === 'string' ? <CmtAvatar src={avatar} alt={title} {...avatarProps} /> : avatar}\r\n      </RenderBadge>\r\n    );\r\n  };\r\n\r\n  const componentContent = () => {\r\n    return (\r\n      <div className={clsx(classes.root, align)}>\r\n        {getAvatarComponent()}\r\n        <div className={clsx(classes.userInfo, 'Cmt-user-info')}>\r\n          <Box component=\"p\" className={clsx(classes.title, 'Cmt-title')} {...titleProps}>\r\n            {title}\r\n          </Box>\r\n          <Box component=\"p\" className={clsx(classes.subTitle, 'Cmt-sub-title')} {...subTitleProps}>\r\n            {subTitle}\r\n          </Box>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const getComponent = () => {\r\n    if (showItemBadge) {\r\n      return <RenderBadge {...{ badge, anchorOrigin, badgeContent, classes }}>{componentContent()}</RenderBadge>;\r\n    }\r\n    return componentContent();\r\n  };\r\n\r\n  return getComponent();\r\n};\r\n\r\nconst RenderBadge = ({ badge, badgeContent, anchorOrigin, classes, children }) => {\r\n  return badge ? (\r\n    <Badge\r\n      className={clsx(classes.badgeAvatarRoot, 'Cmt-badge-avatar', anchorOrigin.vertical, anchorOrigin.horizontal)}\r\n      {...badgeContent}\r\n      anchorOrigin={anchorOrigin}>\r\n      {children}\r\n    </Badge>\r\n  ) : (\r\n    children\r\n  );\r\n};\r\n\r\nCmtObjectSummary.prototype = {\r\n  avatar: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n  badge: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n  subTitle: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n  avatarProps: PropTypes.object,\r\n  badgeProps: PropTypes.object,\r\n  showItemBadge: PropTypes.bool,\r\n  align: PropTypes.string,\r\n  anchorOrigin: PropTypes.object,\r\n  titleProps: PropTypes.object,\r\n  subTitleProps: PropTypes.object,\r\n};\r\n\r\nCmtObjectSummary.defaultProps = {\r\n  align: 'horizontal',\r\n  showItemBadge: false,\r\n  anchorOrigin: {\r\n    vertical: 'top',\r\n    horizontal: 'left',\r\n  },\r\n};\r\n\r\nexport default React.memo(CmtObjectSummary);\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport { AvatarGroup } from '@material-ui/lab';\r\nimport { ClickAwayListener, makeStyles, Tooltip } from '@material-ui/core';\r\n\r\nimport CmtAvatar from '../CmtAvatar';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  rootAvatarGroup: props => ({\r\n    '& .MuiAvatar-root': {\r\n      borderColor: props.avatarStyle.outlineColor,\r\n      borderWidth: props.avatarStyle.outlineThickness,\r\n      marginLeft: -props.spacing,\r\n      transition: 'all 0.30s ease',\r\n      '&:first-child': {\r\n        marginLeft: 0,\r\n      },\r\n      '&:hover': {\r\n        borderColor: props.avatarActiveStyle.outlineColor\r\n          ? props.avatarActiveStyle.outlineColor\r\n          : theme.palette.primary.main,\r\n        borderWidth: props.avatarActiveStyle.outlineThickness,\r\n        boxShadow: `rgba(0,0,0,0.2) 0px 2px ${props.avatarActiveStyle.elevation}px -1px`,\r\n        zIndex: `${props.totalRecords} !important`,\r\n      },\r\n    },\r\n    '&:hover .Cmt-hoverEffect': {\r\n      marginLeft: 0,\r\n    },\r\n  }),\r\n}));\r\n\r\nconst getPlaceholderChar = (str, phCharLength) => {\r\n  if (str && phCharLength > 0) {\r\n    return str.substr(0, phCharLength).toUpperCase();\r\n  }\r\n};\r\n\r\nconst CmtAvatarGroup = ({\r\n  items,\r\n  max,\r\n  srcKey,\r\n  titleKey,\r\n  phCharLength,\r\n  avatarSize,\r\n  onItemClick,\r\n  onMoreClick,\r\n  spacing,\r\n  expandable,\r\n  renderItemSummary,\r\n  renderMore,\r\n  moreVisibleOn,\r\n  itemStyle,\r\n  activeItemStyle,\r\n  tooltipProps,\r\n  ...rest\r\n}) => {\r\n  const avatarStyle = () => ({\r\n    outlineColor: '#fafafa',\r\n    outlineThickness: 2,\r\n    ...itemStyle,\r\n  });\r\n\r\n  const avatarActiveStyle = () => ({\r\n    outlineColor: '',\r\n    outlineThickness: 2,\r\n    elevation: 3,\r\n    ...activeItemStyle,\r\n  });\r\n\r\n  const totalRecords = items.length;\r\n\r\n  const visibleItems = items.slice(0, max < totalRecords ? max - 1 : max);\r\n  const restItems = max < totalRecords ? items.slice(max - 1, totalRecords) : [];\r\n\r\n  const [openMoreTooltip, setOpenMoreTooltip] = useState(false);\r\n  const [renderedMoreItems, setRenderedMoreItems] = useState(\r\n    moreVisibleOn && moreVisibleOn !== 'click' && restItems.length && renderMore ? renderMore(restItems) : '',\r\n  );\r\n\r\n  const ttProps = moreVisibleOn === 'click' ? { open: openMoreTooltip } : {};\r\n\r\n  useEffect(() => {\r\n    if (openMoreTooltip) {\r\n      setRenderedMoreItems(renderMore(restItems));\r\n    } else if (moreVisibleOn === 'click') {\r\n      setRenderedMoreItems('');\r\n    }\r\n    //eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [openMoreTooltip]);\r\n\r\n  const classes = useStyles({\r\n    spacing,\r\n    avatarStyle,\r\n    avatarActiveStyle,\r\n    totalRecords,\r\n  });\r\n\r\n  const handleItemClick = (item, index, event) => {\r\n    if (onItemClick) onItemClick(item, index, event);\r\n  };\r\n\r\n  return (\r\n    <AvatarGroup className={clsx(classes.rootAvatarGroup, 'Cmt-root-avatar-group')} max={max} {...rest}>\r\n      {visibleItems.map((item, index) => {\r\n        return renderItemSummary ? (\r\n          <Tooltip title={renderItemSummary(item, index)} key={index} {...tooltipProps}>\r\n            <CmtAvatar\r\n              className={expandable ? 'Cmt-hoverEffect' : ''}\r\n              alt={item[titleKey]}\r\n              src={item[srcKey]}\r\n              size={avatarSize}\r\n              onClick={event => handleItemClick(item, index, event)}\r\n              style={{ cursor: 'pointer', zIndex: index }}>\r\n              {getPlaceholderChar(item[titleKey], phCharLength)}\r\n            </CmtAvatar>\r\n          </Tooltip>\r\n        ) : (\r\n          <CmtAvatar\r\n            key={index}\r\n            className={expandable ? 'Cmt-hoverEffect' : ''}\r\n            alt={item[titleKey]}\r\n            src={item[srcKey]}\r\n            size={avatarSize}\r\n            onClick={event => handleItemClick(item, index, event)}\r\n            style={{ cursor: 'pointer', zIndex: index }}>\r\n            {getPlaceholderChar(item[titleKey], phCharLength)}\r\n          </CmtAvatar>\r\n        );\r\n      })}\r\n\r\n      {max < totalRecords && (\r\n        <Tooltip title={renderedMoreItems} {...ttProps}>\r\n          <CmtAvatar\r\n            className={clsx('Cmt-avatar-more', expandable ? 'Cmt-hoverEffect' : '')}\r\n            alt={restItems.length.toString()}\r\n            size={avatarSize}\r\n            style={{ cursor: 'pointer', zIndex: max }}\r\n            onClick={event => {\r\n              if ((onMoreClick && typeof onMoreClick) === 'function') onMoreClick(event);\r\n\r\n              if (moreVisibleOn === 'click') {\r\n                setOpenMoreTooltip(!openMoreTooltip);\r\n              }\r\n            }}>\r\n            <ClickAwayListener onClickAway={() => setOpenMoreTooltip(false)}>\r\n              <div>+{restItems.length}</div>\r\n            </ClickAwayListener>\r\n          </CmtAvatar>\r\n        </Tooltip>\r\n      )}\r\n    </AvatarGroup>\r\n  );\r\n};\r\n\r\nCmtAvatarGroup.prototype = {\r\n  items: PropTypes.array.isRequired,\r\n  max: PropTypes.number,\r\n  spacing: PropTypes.number,\r\n  srcKey: PropTypes.string,\r\n  titleKey: PropTypes.string,\r\n  phCharLength: PropTypes.number,\r\n  avatarSize: PropTypes.oneOfType([PropTypes.oneOf(['small', 'medium', 'large']), PropTypes.number]),\r\n  onItemClick: PropTypes.func,\r\n  onMoreClick: PropTypes.func,\r\n  expandable: PropTypes.bool,\r\n  renderItemSummary: PropTypes.func,\r\n  renderMore: PropTypes.func,\r\n  moreVisibleOn: PropTypes.oneOf(['hover', 'click']),\r\n  itemStyle: PropTypes.object,\r\n  activeItemStyle: PropTypes.object,\r\n  tooltipProps: PropTypes.object,\r\n};\r\n\r\nCmtAvatarGroup.defaultProps = {\r\n  items: [],\r\n  max: 5,\r\n  spacing: 8,\r\n  srcKey: 'src',\r\n  titleKey: 'title',\r\n  phCharLength: 1,\r\n  avatarSize: 'medium',\r\n  expandable: false,\r\n  moreVisibleOn: 'hover',\r\n  itemStyle: { outlineColor: '#fafafa', outlineThickness: 2 },\r\n  activeItemStyle: { outlineColor: '', outlineThickness: 2, elevation: 1 },\r\n};\r\n\r\nexport default CmtAvatarGroup;\r\n","import React from 'react';\r\nimport { Checkbox, FormControl, FormControlLabel, FormHelperText } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AppCheckbox = ({\r\n  name,\r\n  id,\r\n  value,\r\n  label,\r\n  labelPlacement,\r\n  checked,\r\n  onChange,\r\n  color,\r\n  required,\r\n  error,\r\n  helperText,\r\n  icon,\r\n  checkedIcon,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <FormControl required={required} error={error} component=\"fieldset\" {...rest}>\r\n      <FormControlLabel\r\n        value={value}\r\n        control={\r\n          <Checkbox\r\n            checked={checked}\r\n            name={name}\r\n            id={id || name}\r\n            onChange={onChange}\r\n            color={color}\r\n            icon={icon}\r\n            checkedIcon={checkedIcon}\r\n          />\r\n        }\r\n        label={label}\r\n        labelPlacement={labelPlacement}\r\n      />\r\n\r\n      {helperText && <FormHelperText error={error || helperText !== ''}>{helperText}</FormHelperText>}\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nAppCheckbox.prototype = {\r\n  name: PropTypes.string,\r\n  id: PropTypes.string,\r\n  checked: PropTypes.bool,\r\n  value: PropTypes.string,\r\n  label: PropTypes.string,\r\n  color: PropTypes.string,\r\n  labelPlacement: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  error: PropTypes.bool,\r\n  helperText: PropTypes.bool,\r\n  icon: PropTypes.element,\r\n  checkedIcon: PropTypes.element,\r\n};\r\n\r\nAppCheckbox.defaultProps = {\r\n  checked: false,\r\n  color: 'primary',\r\n  labelPlacement: 'end',\r\n  error: false,\r\n  helperText: '',\r\n};\r\n\r\nexport default AppCheckbox;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { isFragment } from 'react-is';\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport { chainPropTypes } from '@material-ui/utils';\nvar SPACINGS = {\n  small: -16,\n  medium: null\n};\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'flex'\n    },\n\n    /* Styles applied to the avatar elements. */\n    avatar: {\n      border: \"2px solid \".concat(theme.palette.background.default),\n      marginLeft: -8,\n      '&:first-child': {\n        marginLeft: 0\n      }\n    }\n  };\n};\nvar AvatarGroup = /*#__PURE__*/React.forwardRef(function AvatarGroup(props, ref) {\n  var childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$max = props.max,\n      max = _props$max === void 0 ? 5 : _props$max,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? 'medium' : _props$spacing,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"max\", \"spacing\"]);\n\n  var clampedMax = max < 2 ? 2 : max;\n  var children = React.Children.toArray(childrenProp).filter(function (child) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The AvatarGroup component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.isValidElement(child);\n  });\n  var extraAvatars = children.length > clampedMax ? children.length - clampedMax + 1 : 0;\n  var marginLeft = spacing && SPACINGS[spacing] !== undefined ? SPACINGS[spacing] : -spacing;\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), children.slice(0, children.length - extraAvatars).map(function (child, index) {\n    return /*#__PURE__*/React.cloneElement(child, {\n      className: clsx(child.props.className, classes.avatar),\n      style: _extends({\n        zIndex: children.length - index,\n        marginLeft: index === 0 ? undefined : marginLeft\n      }, child.props.style)\n    });\n  }), extraAvatars ? /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.avatar,\n    style: {\n      zIndex: 0,\n      marginLeft: marginLeft\n    }\n  }, \"+\", extraAvatars) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? AvatarGroup.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The avatars to stack.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Max avatars to show before +x.\n   */\n  max: chainPropTypes(PropTypes.number, function (props) {\n    if (props.max < 2) {\n      throw new Error(['Material-UI: The prop `max` should be equal to 2 or above.', 'A value below is clamped to 2.'].join('\\n'));\n    }\n  }),\n\n  /**\n   * Spacing between avatars.\n   */\n  spacing: PropTypes.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.number])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAvatarGroup'\n})(AvatarGroup);","import React, { useContext } from 'react';\r\nimport CorematContext from '../../../../@jumbo/components/contextProvider/CorematContext';\r\nimport { SectionLegend, SettingsComponent } from '../../../../@jumbo/components/CorematDemosComponents';\r\nimport AppRadioButton from '../../../../@jumbo/components/Common/formElements/AppRadioButton';\r\nimport AppCheckbox from '../../../../@jumbo/components/Common/formElements/AppCheckBox';\r\nimport AppSlider from '../../../../@jumbo/components/Common/formElements/AppSlider';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nconst DemoSettings = () => {\r\n  const {\r\n    expandable,\r\n    setExpandable,\r\n    moreVisibleAction,\r\n    setMoreVisibleAction,\r\n    placeholderLength,\r\n    setPlaceholderLength,\r\n    size,\r\n    setSize,\r\n  } = useContext(CorematContext);\r\n\r\n  const lengthArray = [\r\n    { label: 'One', value: 1 },\r\n    { label: 'Two', value: 2 },\r\n  ];\r\n\r\n  const actionTypes = [\r\n    { label: 'Hover', value: 'hover' },\r\n    { label: 'Click', value: 'click' },\r\n  ];\r\n\r\n  const sizes = [\r\n    { label: 'Small', value: 'small' },\r\n    { label: 'Medium', value: 'medium' },\r\n    { label: 'Large', value: 'large' },\r\n  ];\r\n\r\n  return (\r\n    <SettingsComponent title=\"Cmt Avatar Group\">\r\n      <SectionLegend title=\"Expandable\">\r\n        <AppCheckbox\r\n          label={'Expand on Hover'}\r\n          checked={expandable}\r\n          onChange={event => setExpandable(event.target.checked)}\r\n        />\r\n      </SectionLegend>\r\n\r\n      <SectionLegend title=\"Sizes\">\r\n        {sizes.map((item, index) => (\r\n          <AppRadioButton\r\n            key={index}\r\n            name=\"avatar-size\"\r\n            label={item.label}\r\n            value={item.value}\r\n            checked={size === item.value}\r\n            onChange={() => setSize(item.value)}\r\n          />\r\n        ))}\r\n\r\n        <AppRadioButton name=\"avatar-size\" label=\"Custom\" checked={typeof size === 'number'} onChange={() => setSize(80)} />\r\n      </SectionLegend>\r\n\r\n      {typeof size === 'number' && (\r\n        <SectionLegend>\r\n          <Box flex={1}>\r\n            <Box fontSize={12} mb={1}>\r\n              Set custom size\r\n            </Box>\r\n\r\n            <AppSlider\r\n              defaultValue={80}\r\n              getAriaValueText={() => size}\r\n              aria-labelledby=\"discrete-slider\"\r\n              valueLabelDisplay=\"auto\"\r\n              step={5}\r\n              min={30}\r\n              max={100}\r\n              onChange={(event, newValue) => setSize(newValue)}\r\n            />\r\n            <Box display=\"flex\" justifyContent=\"space-between\" mt={-2} mb={2}>\r\n              <Box fontSize={12}>30px</Box>\r\n\r\n              <Box fontSize={12}>100px</Box>\r\n            </Box>\r\n          </Box>\r\n        </SectionLegend>\r\n      )}\r\n\r\n      <SectionLegend title=\"More Visible Action\">\r\n        {actionTypes.map((item, index) => (\r\n          <AppRadioButton\r\n            key={index}\r\n            name=\"action-type\"\r\n            label={item.label}\r\n            value={item.value}\r\n            checked={moreVisibleAction === item.value}\r\n            onChange={() => setMoreVisibleAction(item.value)}\r\n          />\r\n        ))}\r\n      </SectionLegend>\r\n\r\n      <SectionLegend title=\"Placeholder Char Length \">\r\n        {lengthArray.map((item, index) => (\r\n          <AppRadioButton\r\n            key={index}\r\n            name=\"placeholder-length\"\r\n            label={item.label}\r\n            value={item.value}\r\n            checked={placeholderLength === item.value}\r\n            onChange={() => setPlaceholderLength(item.value)}\r\n          />\r\n        ))}\r\n      </SectionLegend>\r\n    </SettingsComponent>\r\n  );\r\n};\r\n\r\nexport default DemoSettings;\r\n","import React, { useContext } from 'react';\r\nimport CorematContext from '../../../../@jumbo/components/contextProvider/CorematContext';\r\nimport JumboCard from '../../../../@jumbo/components/Common/JumboCard';\r\nimport { coremat } from '../../../../@fake-db/coremat-components';\r\nimport Box from '@material-ui/core/Box';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport { Typography } from '@material-ui/core';\r\nimport CmtAvatarGroup from '../../../../@coremat/CmtAvatarGroup';\r\nimport CmtObjectSummary from '../../../../@coremat/CmtObjectSummary';\r\nimport CmtAvatar from '../../../../@coremat/CmtAvatar';\r\nimport CmtList from '../../../../@coremat/CmtList';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    flexWrap: 'wrap',\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      flexWrap: 'wrap',\r\n    },\r\n  },\r\n  titleRoot: {\r\n    color: theme.palette.common.white,\r\n    fontSize: 14,\r\n  },\r\n  avatarRoot: {\r\n    marginTop: 2,\r\n    marginBottom: 2,\r\n  },\r\n  avatar: {\r\n    [theme.breakpoints.up('xl')]: {\r\n      width: 56,\r\n      height: 56,\r\n    },\r\n  },\r\n}));\r\n\r\nconst RenderRow = ({ item, placeholderLength }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <Typography color=\"inherit\">{item.title}</Typography>\r\n      <Box pb={2} component=\"p\">\r\n        {\"It's very engaging. Right?\"}\r\n      </Box>\r\n      <CmtAvatar src={item.profile_pic} alt={item.title} variant=\"rounded\" size={125} phCharLength={placeholderLength} />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst RenderMOre = ({ items, placeholderLength }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <CmtList\r\n      data={items}\r\n      renderRow={(item, index) => {\r\n        return (\r\n          <CmtObjectSummary\r\n            key={index}\r\n            avatar={\r\n              <CmtAvatar\r\n                className={classes.avatarRoot}\r\n                color=\"orange\"\r\n                size={40}\r\n                src={item.profile_pic}\r\n                alt={item.title}\r\n                phCharLength={placeholderLength}\r\n              />\r\n            }\r\n            title={item.title}\r\n            titleProps={{ className: classes.titleRoot }}\r\n          />\r\n        );\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nconst AvatarGroupView = () => {\r\n  const classes = useStyles();\r\n  const { expandable, moreVisibleAction, placeholderLength, size } = useContext(CorematContext);\r\n  const theme = useTheme();\r\n  const { avatars } = coremat;\r\n  const handleItemClick = (item, index) => {};\r\n\r\n  return (\r\n    <JumboCard>\r\n      <Box className={classes.root}>\r\n        <CmtAvatarGroup\r\n          items={avatars}\r\n          max={6}\r\n          srcKey=\"profile_pic\"\r\n          avatarSize={size}\r\n          spacing={expandable ? 10 : 0}\r\n          expandable={expandable}\r\n          phCharLength={placeholderLength}\r\n          itemStyle={{\r\n            outlineColor: '#fafafa',\r\n            outlineThickness: 3,\r\n          }}\r\n          activeItemStyle={{\r\n            outlineColor: theme.palette.primary.main,\r\n            outlineThickness: 3,\r\n            elevation: 10,\r\n          }}\r\n          moreVisibleOn={moreVisibleAction}\r\n          onItemClick={handleItemClick}\r\n          renderMore={restItems => <RenderMOre items={restItems} placeholderLength={placeholderLength} />}\r\n          renderItemSummary={(item, index) => <RenderRow key={index} item={item} placeholderLength={placeholderLength} />}\r\n        />\r\n      </Box>\r\n    </JumboCard>\r\n  );\r\n};\r\n\r\nexport default AvatarGroupView;\r\n","import React, { useState } from 'react';\r\nimport CorematContext from '../../../../@jumbo/components/contextProvider/CorematContext';\r\n\r\nconst AvatarGroupContextProvider = ({ children }) => {\r\n  const [expandable, setExpandable] = useState(false);\r\n  const [moreVisibleAction, setMoreVisibleAction] = useState('hover');\r\n  const [placeholderLength, setPlaceholderLength] = useState(1);\r\n  const [size, setSize] = useState('medium');\r\n\r\n  return (\r\n    <CorematContext.Provider\r\n      value={{\r\n        expandable,\r\n        setExpandable,\r\n        moreVisibleAction,\r\n        setMoreVisibleAction,\r\n        placeholderLength,\r\n        setPlaceholderLength,\r\n        size,\r\n        setSize,\r\n      }}>\r\n      {children}\r\n    </CorematContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AvatarGroupContextProvider;\r\n","import React, { useContext } from 'react';\r\nimport CorematContext from '../../../../@jumbo/components/contextProvider/CorematContext';\r\nimport { SourceCodeComponent } from '../../../../@jumbo/components/CorematDemosComponents';\r\nimport { coremat } from '../../../../@fake-db/coremat-components';\r\n\r\nconst DemoSourceCode = () => {\r\n  const { expandable, moreVisibleAction, placeholderLength, size } = useContext(CorematContext);\r\n  const { avatars } = coremat;\r\n  const dataString = JSON.stringify(avatars, null, 2);\r\n\r\n  const getSizeCode = () => {\r\n    if (typeof size === 'string') {\r\n      return `\r\n  size=\"${size}\"`;\r\n    }\r\n\r\n    return `\r\n  size={${size}}`;\r\n  };\r\n\r\n  const getSourceCode = () => {\r\n    return (\r\n      `\r\nconst theme = useTheme();\r\n\r\n<CmtAvatarGroup\r\n  items={avatars}\r\n  max={6}\r\n  srcKey=\"profile_pic\"` +\r\n      getSizeCode() +\r\n      `\r\n  spacing={${expandable ? 10 : 0}}\r\n  expandable={${expandable}}\r\n  phCharLength={${placeholderLength}}\r\n  itemStyle={{\r\n    outlineColor: '#fafafa',\r\n    outlineThickness: 3,\r\n  }}\r\n  activeItemStyle={{\r\n    outlineColor: theme.palette.primary.main,\r\n    outlineThickness: 3,\r\n    elevation: 10,\r\n  }}\r\n  moreVisibleOn=\"${moreVisibleAction}\"\r\n  onItemClick={(item, index) => console.log('onItemClick', item, index)}\r\n  renderMore={restItems => <RenderMore items={restItems} placeholderLength={placeholderLength} />}\r\n  renderItemSummary={(item, index) => <RenderRow key={index} item={item} placeholderLength={placeholderLength} />}\r\n/>\r\n\r\nconst RenderRow = ({ item, placeholderLength }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <Typography color=\"inherit\">{item.title}</Typography>\r\n      <Box pb={2} component=\"p\">\r\n        {\"It's very engaging. Right?\"}\r\n      </Box>\r\n      <CmtAvatar src={item.profile_pic} alt={item.title} variant=\"rounded\" size={125} phCharLength={placeholderLength} />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst RenderMore = ({ items, placeholderLength }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <CmtList\r\n      data={items}\r\n      renderRow={(item, index) => {\r\n        return (\r\n          <CmtObjectSummary\r\n            key={index}\r\n            avatar={\r\n              <CmtAvatar\r\n                className={classes.avatarRoot}\r\n                color=\"orange\"\r\n                size={40}\r\n                src={item.profile_pic}\r\n                alt={item.title}\r\n                phCharLength={placeholderLength}\r\n              />\r\n            }\r\n            title={item.title}\r\n            titleProps={{ className: classes.titleRoot }}\r\n          />\r\n        );\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nconst avatars = ${dataString};\r\n`\r\n    );\r\n  };\r\n\r\n  return <SourceCodeComponent sourceCode={getSourceCode()} />;\r\n};\r\n\r\nexport default DemoSourceCode;\r\n","import React from 'react';\r\nimport { CorematComponentDemo } from '../../../../@jumbo/components/PageComponents';\r\nimport DemoSettings from './DemoSettings';\r\nimport AvatarGroupView from './AvatarGroupView';\r\nimport AvatarGroupContextProvider from './AvatarGroupContextProvider';\r\nimport DemoSourceCode from './DemoSourceCode';\r\n\r\nconst CmtAvatarGroupDemo = () => {\r\n  return (\r\n    <AvatarGroupContextProvider>\r\n      <CorematComponentDemo SourceCodeComponent={<DemoSourceCode />} SettingsComponent={<DemoSettings />}>\r\n        <AvatarGroupView />\r\n      </CorematComponentDemo>\r\n    </AvatarGroupContextProvider>\r\n  );\r\n};\r\n\r\nexport default CmtAvatarGroupDemo;\r\n"],"sourceRoot":""}